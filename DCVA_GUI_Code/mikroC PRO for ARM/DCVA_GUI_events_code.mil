_ValueZero:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,86 :: 		ValueZero(){
_ValueZero:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,88 :: 		ClassNumber=20;ClassPopulation=5;
	R1 <4> <- 20   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 5   (midx: 0)
	R0 <4> <- addr(_ClassPopulation)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,89 :: 		N=99;
	R1 <4> <- 99   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,90 :: 		TrainPicture=ClassNumber*ClassPopulation;
	R1 <4> <- 100   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,91 :: 		ii=0;jj=0;kk=0;mm=0;x1=0;y1=0;z1=0;
	R0 <4> <- 0   (midx: 0)
	R2 <4> <- addr(_ii)   (midx: 0)
	[R2] <4> <- R0   (midx: 0)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_jj)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_kk)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_mm)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,92 :: 		p=0;q=0;row=60;col=80;k1=0;q1=50;q2=60;a1=0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_p)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_q)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 60   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 80   (midx: 0)
	R0 <4> <- addr(_col)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_k1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 50   (midx: 0)
	R0 <4> <- addr(_q1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 60   (midx: 0)
	R0 <4> <- addr(_q2)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_a1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,93 :: 		ff=0; m1=0;tt=0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ff)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_m1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_tt)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,94 :: 		tempk1=0;tempk2=0;tempk3=0;
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_tempk1)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_tempk2)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
	R1 <1> <- 0   (midx: 0)
	R0 <4> <- addr(_tempk3)   (midx: 0)
	[R0] <1> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,95 :: 		temp1=0;temp2=0;temp3=0;temp4=0;temp5=0;NormFault=0;t=0;c=0;s=0;diag_toplam=0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp2)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp3)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp4)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp5)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_NormFault)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_t)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_c)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_s)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_diag_toplam)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,96 :: 		WhoseEar=0;  basla=0;test_count=0;accuracy=0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_WhoseEar)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_basla)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_test_count)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_accuracy)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,97 :: 		TestPicture=50;DCVA_TetaC=400;EpsilonK=0;
	R1 <4> <- 50   (midx: 0)
	R0 <4> <- addr(_TestPicture)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
	R0 <4> <- 4.000000E+002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_DCVA_TetaC)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_EpsilonK)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,98 :: 		iteration1=0;iteration2=0;iteration3=0;ite_total=0;
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_iteration1)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_iteration2)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_iteration3)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_ite_total)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,99 :: 		for(ii=0;ii<TrainPicture;ii++) {GTemp[ii]=0; MTemp[ii]=0;}
	R0 <4> <- 0   (midx: 0)
	[R2] <4> <- R0   (midx: 0)
0:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 1   (midx: 2)
	R2 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_GTemp   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_MTemp   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
	goto	0   (midx: 0)
1:   (midx: 0)
//DCVA_GUI_events_code.c,101 :: 		for(ii=0;ii<(ClassNumber-1);ii++) ProjectedTestImage[ii]=0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
3:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 - 1   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 4   (midx: 2)
	R2 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_ProjectedTestImage   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
	goto	3   (midx: 0)
4:   (midx: 0)
//DCVA_GUI_events_code.c,103 :: 		for(y1=0;y1<TrainPicture;y1++){       //V ilk deðer atama eye(n) birim matris
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
6:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 7   (midx: 2)
//DCVA_GUI_events_code.c,104 :: 		for(x1=0;x1<TrainPicture;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
9:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 10   (midx: 2)
//DCVA_GUI_events_code.c,105 :: 		if (x1==y1) V[x1][y1] = 1;
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 != R1) then goto 12   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- 1.000000E+000   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
	goto	13   (midx: 0)
12:   (midx: 0)
//DCVA_GUI_events_code.c,106 :: 		else        V[x1][y1] = 0;}}
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
13:   (midx: 0)
//DCVA_GUI_events_code.c,104 :: 		for(x1=0;x1<TrainPicture;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,106 :: 		else        V[x1][y1] = 0;}}
	goto	9   (midx: 0)
10:   (midx: 0)
//DCVA_GUI_events_code.c,103 :: 		for(y1=0;y1<TrainPicture;y1++){       //V ilk deðer atama eye(n) birim matris
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,106 :: 		else        V[x1][y1] = 0;}}
	goto	6   (midx: 0)
7:   (midx: 0)
//DCVA_GUI_events_code.c,108 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
14:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 15   (midx: 2)
//DCVA_GUI_events_code.c,109 :: 		for(x1=0;x1<TrainPicture;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
17:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 18   (midx: 2)
//DCVA_GUI_events_code.c,110 :: 		D[x1][y1] = 0;  R[x1][y1] = 0; L[x1][y1] = 0;}}
	R3 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R3]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_D   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
	R0 <4> <- R3   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
	R0 <4> <- R3   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,109 :: 		for(x1=0;x1<TrainPicture;x1++){
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,110 :: 		D[x1][y1] = 0;  R[x1][y1] = 0; L[x1][y1] = 0;}}
	goto	17   (midx: 0)
18:   (midx: 0)
//DCVA_GUI_events_code.c,108 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,110 :: 		D[x1][y1] = 0;  R[x1][y1] = 0; L[x1][y1] = 0;}}
	goto	14   (midx: 0)
15:   (midx: 0)
//DCVA_GUI_events_code.c,112 :: 		for(y1=0;y1<ClassNumber;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
20:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 21   (midx: 2)
//DCVA_GUI_events_code.c,113 :: 		for(x1=0;x1<ClassNumber;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
23:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 24   (midx: 2)
//DCVA_GUI_events_code.c,114 :: 		SL[x1][y1] = 0; SV[x1][y1] = 0;}}
	R3 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R3]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
	R0 <4> <- R3   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SV   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,113 :: 		for(x1=0;x1<ClassNumber;x1++){
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,114 :: 		SL[x1][y1] = 0; SV[x1][y1] = 0;}}
	goto	23   (midx: 0)
24:   (midx: 0)
//DCVA_GUI_events_code.c,112 :: 		for(y1=0;y1<ClassNumber;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,114 :: 		SL[x1][y1] = 0; SV[x1][y1] = 0;}}
	goto	20   (midx: 0)
21:   (midx: 0)
//DCVA_GUI_events_code.c,116 :: 		for(x1=0;x1<256;x1++) histogram[x1]=0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
26:   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 256) then goto 27   (midx: 2)
	R2 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R1 <4> <-  R0 shl 1   (midx: 2)
	R0 <4> <- #_histogram   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <2> <- 0   (midx: 0)
	[R1] <2> <- R0   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
	goto	26   (midx: 0)
27:   (midx: 0)
  end
   (midx: 0)
_DCVA_START:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,120 :: 		void DCVA_START() {
_DCVA_START:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,121 :: 		DrawScreen(&Screen5);
	R0 <4> <- #_Screen5   (midx: 0)
	CALL _DrawScreen   (midx: 0)
  end
   (midx: 0)
_J_E_2:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,124 :: 		void J_E_2() {
_J_E_2:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,125 :: 		jac_coe=0.01;
	R0 <4> <- 1.000000E-002   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_jac_coe)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,126 :: 		DrawScreen(&Screen6);
	R0 <4> <- #_Screen6   (midx: 0)
	CALL _DrawScreen   (midx: 0)
  end
   (midx: 0)
_J_E_3:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,129 :: 		void J_E_3() {
_J_E_3:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,130 :: 		jac_coe=0.001;
	R0 <4> <- 1.000000E-003   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_jac_coe)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,131 :: 		DrawScreen(&Screen6);
	R0 <4> <- #_Screen6   (midx: 0)
	CALL _DrawScreen   (midx: 0)
  end
   (midx: 0)
_J_E_4:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,134 :: 		void J_E_4() {
_J_E_4:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,135 :: 		jac_coe=0.0001;
	R0 <4> <- 1.000000E-004   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_jac_coe)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,136 :: 		DrawScreen(&Screen6);
	R0 <4> <- #_Screen6   (midx: 0)
	CALL _DrawScreen   (midx: 0)
  end
   (midx: 0)
_J_E_5:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,139 :: 		void J_E_5() {
_J_E_5:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,140 :: 		jac_coe=0.00001;
	R0 <4> <- 1.000000E-005   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_jac_coe)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,141 :: 		DrawScreen(&Screen6);
	R0 <4> <- #_Screen6   (midx: 0)
	CALL _DrawScreen   (midx: 0)
  end
   (midx: 0)
_J_E_6:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,144 :: 		void J_E_6() {
_J_E_6:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,145 :: 		jac_coe=0.000001;
	R0 <4> <- 1.000000E-006   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_jac_coe)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,146 :: 		DrawScreen(&Screen6);
	R0 <4> <- #_Screen6   (midx: 0)
	CALL _DrawScreen   (midx: 0)
  end
   (midx: 0)
_J_E_7:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,149 :: 		void J_E_7() {
_J_E_7:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,150 :: 		jac_coe=0.0000001;
	R0 <4> <- 1.000000E-007   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_jac_coe)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,151 :: 		DrawScreen(&Screen6);
	R0 <4> <- #_Screen6   (midx: 0)
	CALL _DrawScreen   (midx: 0)
  end
   (midx: 0)
_J_E_8:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,155 :: 		void J_E_8() {
_J_E_8:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,156 :: 		jac_coe=0.00000001;
	R0 <4> <- 1.000000E-008   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_jac_coe)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,157 :: 		DrawScreen(&Screen6);
	R0 <4> <- #_Screen6   (midx: 0)
	CALL _DrawScreen   (midx: 0)
  end
   (midx: 0)
_J_E_9:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,160 :: 		void J_E_9() {
_J_E_9:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,161 :: 		jac_coe=0.000000001;
	R0 <4> <- 1.000000E-009   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_jac_coe)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,162 :: 		DrawScreen(&Screen6);
	R0 <4> <- #_Screen6   (midx: 0)
	CALL _DrawScreen   (midx: 0)
  end
   (midx: 0)
_DCVA_TRAINING:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,165 :: 		void DCVA_TRAINING() {
_DCVA_TRAINING:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,167 :: 		ValueZero();
	CALL _ValueZero   (midx: 0)
//DCVA_GUI_events_code.c,168 :: 		DrawScreen(&Screen2);
	R0 <4> <- #_Screen2   (midx: 0)
	CALL _DrawScreen   (midx: 0)
//DCVA_GUI_events_code.c,170 :: 		for(ii=0;ii<row*col;ii++){ // m_ort = row*col x 1
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
29:   (midx: 0)
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 30   (midx: 2)
//DCVA_GUI_events_code.c,171 :: 		dd = div(ii,100);
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <2> <- 100   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R12 <4> <- addr(FLOC_DCVA_TRAINING+0)   (midx: 0)
	CALL _div   (midx: 0)
	R3 <1> <- 4   (midx: 0)
	R2 <4> <- addr(_dd)   (midx: 0)
	R1 <4> <- addr(FLOC_DCVA_TRAINING+0)   (midx: 0)
32:   (midx: 0)
	R0 <1> <- *R1   (midx: 0)
	[R2] <1> <- R0   (midx: 0)
	R3 <1> <-  R3 - 1   (midx: 0)
	R3 <1> <- R3   (midx: 0)
	R1 <4> <-  R1 + 1   (midx: 0)
	R2 <4> <-  R2 + 1   (midx: 0)
	if (R3) then goto 32   (midx: 0)
   (midx: 0)
//DCVA_GUI_events_code.c,172 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,173 :: 		for(z1=0;(z1<TrainPicture);z1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
33:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 34   (midx: 2)
//DCVA_GUI_events_code.c,174 :: 		temp1 =  temp1 + Ear[row*col*z1+ii];
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R2 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R1 <4> <-  R1 * R0   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- #_Ear   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <1> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,173 :: 		for(z1=0;(z1<TrainPicture);z1++)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,174 :: 		temp1 =  temp1 + Ear[row*col*z1+ii];
	goto	33   (midx: 0)
34:   (midx: 0)
//DCVA_GUI_events_code.c,175 :: 		R[dd.quot][dd.rem] = temp1/TrainPicture;}
	R0 <4> <- addr(_dd+0)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_dd+2)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 / S1   (midx: 9)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,170 :: 		for(ii=0;ii<row*col;ii++){ // m_ort = row*col x 1
	R1 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,175 :: 		R[dd.quot][dd.rem] = temp1/TrainPicture;}
	goto	29   (midx: 0)
30:   (midx: 0)
//DCVA_GUI_events_code.c,177 :: 		TFT_Write_Text("MEAN OK", 30, 30);
	R0 <4> <- #?lstr1_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 30   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,178 :: 		TFT_Write_Text("L=A'*A ?", 30, 50);
	R0 <4> <- #?lstr2_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 50   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,180 :: 		for(x1=0;x1<TrainPicture;x1++){        // L = A'*A;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
36:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 37   (midx: 2)
//DCVA_GUI_events_code.c,181 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
39:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 40   (midx: 2)
//DCVA_GUI_events_code.c,182 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,183 :: 		for(ii=0;ii<row*col;ii++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
42:   (midx: 0)
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 43   (midx: 2)
//DCVA_GUI_events_code.c,184 :: 		dd = div(ii,100);
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <2> <- 100   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R12 <4> <- addr(FLOC_DCVA_TRAINING+0)   (midx: 0)
	CALL _div   (midx: 0)
	R3 <1> <- 4   (midx: 0)
	R2 <4> <- addr(_dd)   (midx: 0)
	R1 <4> <- addr(FLOC_DCVA_TRAINING+0)   (midx: 0)
45:   (midx: 0)
	R0 <1> <- *R1   (midx: 0)
	[R2] <1> <- R0   (midx: 0)
	R3 <1> <-  R3 - 1   (midx: 0)
	R3 <1> <- R3   (midx: 0)
	R1 <4> <-  R1 + 1   (midx: 0)
	R2 <4> <-  R2 + 1   (midx: 0)
	if (R3) then goto 45   (midx: 0)
   (midx: 0)
//DCVA_GUI_events_code.c,185 :: 		temp1 = temp1 + (ear[row*col*x1 + ii] - R[dd.quot][dd.rem])*(ear[row*col*y1 + ii] - R[dd.quot][dd.rem]);}
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R4 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R4 * R0   (midx: 2)
	R3 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R3]   (midx: 0)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- #_Ear   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R2 <1> <- *R0   (midx: 0)
	R0 <4> <- addr(_dd+0)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_dd+2)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- (type cast)R2   (midx: 0)
	S2 <4> <- *R1   (midx: 0)
	S1 <4> <-  S0 - S2   (midx: 9)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R4 * R0   (midx: 2)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- #_Ear   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <1> <- *R0   (midx: 0)
	S0 <4> <- (type cast)R0   (midx: 0)
	S0 <4> <-  S0 - S2   (midx: 9)
	S1 <4> <-  S1 * S0   (midx: 9)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,183 :: 		for(ii=0;ii<row*col;ii++){
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,185 :: 		temp1 = temp1 + (ear[row*col*x1 + ii] - R[dd.quot][dd.rem])*(ear[row*col*y1 + ii] - R[dd.quot][dd.rem]);}
	goto	42   (midx: 0)
43:   (midx: 0)
//DCVA_GUI_events_code.c,186 :: 		L[x1][y1] = temp1;}}
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,181 :: 		for(y1=0;y1<TrainPicture;y1++){
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,186 :: 		L[x1][y1] = temp1;}}
	goto	39   (midx: 0)
40:   (midx: 0)
//DCVA_GUI_events_code.c,180 :: 		for(x1=0;x1<TrainPicture;x1++){        // L = A'*A;
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,186 :: 		L[x1][y1] = temp1;}}
	goto	36   (midx: 0)
37:   (midx: 0)
//DCVA_GUI_events_code.c,188 :: 		TFT_Write_Text("L=A'*A OK", 30, 70);
	R0 <4> <- #?lstr3_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 70   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,189 :: 		TFT_Write_Text("JACOBI ITERATION ?", 30, 90);
	R0 <4> <- #?lstr4_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 90   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,191 :: 		temp1 = 0;      //en büyük deðer bulma
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,192 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
46:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 47   (midx: 2)
//DCVA_GUI_events_code.c,193 :: 		for(x1=0;x1<TrainPicture;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
49:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 50   (midx: 2)
//DCVA_GUI_events_code.c,194 :: 		if ((fabs(L[x1][y1]) > temp1) && (x1 != y1)) {
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	if ( S0 <= S1) then goto 430   (midx: 9)
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 = R1) then goto 429   (midx: 2)
428:   (midx: 0)
//DCVA_GUI_events_code.c,195 :: 		temp1 = fabs(L[x1][y1]);
	R0 <4> <- addr(_x1)   (midx: 0)
	FLOC_DCVA_TRAINING+4 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- R0   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,196 :: 		p=x1;
	R0 <4> <- FLOC_DCVA_TRAINING+4   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_p)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,197 :: 		q=y1;}}}
	R0 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_q)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,194 :: 		if ((fabs(L[x1][y1]) > temp1) && (x1 != y1)) {
430:   (midx: 0)
429:   (midx: 0)
//DCVA_GUI_events_code.c,193 :: 		for(x1=0;x1<TrainPicture;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,197 :: 		q=y1;}}}
	goto	49   (midx: 0)
50:   (midx: 0)
//DCVA_GUI_events_code.c,192 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,197 :: 		q=y1;}}}
	goto	46   (midx: 0)
47:   (midx: 0)
//DCVA_GUI_events_code.c,199 :: 		iteration1 = 0;
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_iteration1)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,200 :: 		basla = 1;                              // jacobi iteration döngü baþangýcý
	R1 <2> <- 1   (midx: 0)
	R0 <4> <- addr(_basla)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,201 :: 		while (basla==1){
55:   (midx: 0)
	R0 <4> <- addr(_basla)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	if ( R0 != 1) then goto 56   (midx: 1)
//DCVA_GUI_events_code.c,203 :: 		IntToStr(iteration1,txt1);
	R0 <4> <- addr(_iteration1)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <4> <- #_txt1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _IntToStr   (midx: 0)
//DCVA_GUI_events_code.c,204 :: 		TFT_Write_Text(txt1,120,60);
	R2 <2> <- 60   (midx: 0)
	R1 <2> <- 120   (midx: 0)
	R0 <4> <- #_txt1   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,206 :: 		t = (L[p][q])/((L[q][q])-(L[p][p]));
	R4 <4> <- addr(_p)   (midx: 0)
	R1 <4> <- [R4]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R3 <4> <-  R0 + R1   (midx: 2)
	R1 <4> <- addr(_q)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R2 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R3 + R2   (midx: 2)
	S2 <4> <- *R0   (midx: 0)
	R0 <4> <- R1   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <-  R0 + R2   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R0 <4> <- R4   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R3 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <-  S1 - S0   (midx: 9)
	S0 <4> <-  S2 / S0   (midx: 9)
	R0 <4> <- addr(_t)   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- R0   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,207 :: 		c = 1/(sqrt(t*t+1));
	S1 <4> <-  S0 * S0   (midx: 9)
	S0 <4> <- 1.000000E+000   (midx: 0)
	S0 <4> <-  S1 + S0   (midx: 9)
	S0 <4> <- S0   (midx: 0)
	CALL _sqrt   (midx: 0)
	S1 <4> <- 1.000000E+000   (midx: 0)
	S1 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- addr(_c)   (midx: 0)
	[R0] <4> <- S1   (midx: 0)
//DCVA_GUI_events_code.c,208 :: 		s = t*c;
	R0 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- addr(_s)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,210 :: 		for(y1=0;y1<TrainPicture;y1++){ //matris çarpýmý D([p q],:) = R'*D([p q],:);
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
57:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 58   (midx: 2)
//DCVA_GUI_events_code.c,211 :: 		temp1 = L[p][y1];
	R0 <4> <- addr(_p)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R8 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R8]   (midx: 0)
	R2 <4> <-  R0 shl 2   (midx: 2)
	R7 <4> <-  R1 + R2   (midx: 2)
	S0 <4> <- *R7   (midx: 0)
	R6 <4> <- addr(_temp1)   (midx: 0)
	[R6] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,212 :: 		temp2 = L[q][y1];
	R5 <4> <- addr(_q)   (midx: 0)
	R1 <4> <- [R5]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <-  R0 + R2   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	R4 <4> <- addr(_temp2)   (midx: 0)
	[R4] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,213 :: 		temp3 = temp1*c + temp2*(-s);
	R2 <4> <- addr(_c)   (midx: 0)
	S1 <4> <- [R2]   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 * S1   (midx: 9)
	R1 <4> <- addr(_s)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	S1 <4> <-  0.000000E+000 - S0   (midx: 9)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R3 <4> <- addr(_temp3)   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,214 :: 		temp4 = temp1*s + temp2*c;
	R0 <4> <- R1   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- R2   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R2 <4> <- addr(_temp4)   (midx: 0)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,215 :: 		L[p][y1] = temp3;
	R0 <4> <- R3   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R7] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,216 :: 		L[q][y1] = temp4;}
	R0 <4> <- R5   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R8   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,210 :: 		for(y1=0;y1<TrainPicture;y1++){ //matris çarpýmý D([p q],:) = R'*D([p q],:);
	R0 <4> <- R8   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R8] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,216 :: 		L[q][y1] = temp4;}
	goto	57   (midx: 0)
58:   (midx: 0)
//DCVA_GUI_events_code.c,218 :: 		for(x1=0;x1<TrainPicture;x1++){ //matris çarpýmý D(:,[p q]) = D(:,[p q])*R;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
60:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 61   (midx: 2)
//DCVA_GUI_events_code.c,219 :: 		temp1 = L[x1][p];
	R8 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R8]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R2 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_p)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R7 <4> <-  R2 + R0   (midx: 2)
	S1 <4> <- *R7   (midx: 0)
	R6 <4> <- addr(_temp1)   (midx: 0)
	[R6] <4> <- S1   (midx: 0)
//DCVA_GUI_events_code.c,220 :: 		temp2 = L[x1][q];
	R5 <4> <- addr(_q)   (midx: 0)
	R0 <4> <- [R5]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R2 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	R4 <4> <- addr(_temp2)   (midx: 0)
	[R4] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,221 :: 		temp3 = temp1*c + temp2*(-s);
	R2 <4> <- addr(_c)   (midx: 0)
	S0 <4> <- [R2]   (midx: 0)
	S2 <4> <-  S1 * S0   (midx: 9)
	R1 <4> <- addr(_s)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	S1 <4> <-  0.000000E+000 - S0   (midx: 9)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R3 <4> <- addr(_temp3)   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,222 :: 		temp4 = temp1*s + temp2*c;
	R0 <4> <- R1   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- R2   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R2 <4> <- addr(_temp4)   (midx: 0)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,223 :: 		L[x1][p] = temp3;
	R0 <4> <- R3   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R7] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,224 :: 		L[x1][q] = temp4;}
	R0 <4> <- R8   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R5   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,218 :: 		for(x1=0;x1<TrainPicture;x1++){ //matris çarpýmý D(:,[p q]) = D(:,[p q])*R;
	R0 <4> <- R8   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R8] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,224 :: 		L[x1][q] = temp4;}
	goto	60   (midx: 0)
61:   (midx: 0)
//DCVA_GUI_events_code.c,226 :: 		for(x1=0;x1<TrainPicture;x1++){  //matris çarpýmý V(:,[p q]) = V(:,[p q])*R;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
63:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 64   (midx: 2)
//DCVA_GUI_events_code.c,227 :: 		temp1 = V[x1][p];
	R8 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R8]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R2 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_p)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R7 <4> <-  R2 + R0   (midx: 2)
	S1 <4> <- *R7   (midx: 0)
	R6 <4> <- addr(_temp1)   (midx: 0)
	[R6] <4> <- S1   (midx: 0)
//DCVA_GUI_events_code.c,228 :: 		temp2 = V[x1][q];
	R5 <4> <- addr(_q)   (midx: 0)
	R0 <4> <- [R5]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R2 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	R4 <4> <- addr(_temp2)   (midx: 0)
	[R4] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,229 :: 		temp3 = temp1*c + temp2*(-s);
	R2 <4> <- addr(_c)   (midx: 0)
	S0 <4> <- [R2]   (midx: 0)
	S2 <4> <-  S1 * S0   (midx: 9)
	R1 <4> <- addr(_s)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	S1 <4> <-  0.000000E+000 - S0   (midx: 9)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R3 <4> <- addr(_temp3)   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,230 :: 		temp4 = temp1*s + temp2*c;
	R0 <4> <- R1   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- R2   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R2 <4> <- addr(_temp4)   (midx: 0)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,231 :: 		V[x1][p] = temp3;
	R0 <4> <- R3   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R7] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,232 :: 		V[x1][q] = temp4;}
	R0 <4> <- R8   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R5   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,226 :: 		for(x1=0;x1<TrainPicture;x1++){  //matris çarpýmý V(:,[p q]) = V(:,[p q])*R;
	R0 <4> <- R8   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R8] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,232 :: 		V[x1][q] = temp4;}
	goto	63   (midx: 0)
64:   (midx: 0)
//DCVA_GUI_events_code.c,234 :: 		temp1 = 0;      //en büyük deðer bulma
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,235 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
66:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 67   (midx: 2)
//DCVA_GUI_events_code.c,236 :: 		for(x1=0;x1<TrainPicture;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
69:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 70   (midx: 2)
//DCVA_GUI_events_code.c,237 :: 		if ((fabs(L[x1][y1]) > temp1) && (x1 != y1)) {
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	if ( S0 <= S1) then goto 432   (midx: 9)
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 = R1) then goto 431   (midx: 2)
427:   (midx: 0)
//DCVA_GUI_events_code.c,238 :: 		temp1 = fabs(L[x1][y1]);
	R0 <4> <- addr(_x1)   (midx: 0)
	FLOC_DCVA_TRAINING+4 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- R0   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,239 :: 		p=x1;
	R0 <4> <- FLOC_DCVA_TRAINING+4   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_p)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,240 :: 		q=y1;}}}
	R0 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_q)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,237 :: 		if ((fabs(L[x1][y1]) > temp1) && (x1 != y1)) {
432:   (midx: 0)
431:   (midx: 0)
//DCVA_GUI_events_code.c,236 :: 		for(x1=0;x1<TrainPicture;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,240 :: 		q=y1;}}}
	goto	69   (midx: 0)
70:   (midx: 0)
//DCVA_GUI_events_code.c,235 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,240 :: 		q=y1;}}}
	goto	66   (midx: 0)
67:   (midx: 0)
//DCVA_GUI_events_code.c,242 :: 		diag_toplam=0;            // döngüden çýkma eþik deðeri
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_diag_toplam)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,243 :: 		for(x1=0;x1<TrainPicture;x1++)  diag_toplam = diag_toplam + L[x1][x1]*L[x1][x1];
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
75:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 76   (midx: 2)
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S1 <4> <-  S0 * S0   (midx: 9)
	R0 <4> <- addr(_diag_toplam)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
	goto	75   (midx: 0)
76:   (midx: 0)
//DCVA_GUI_events_code.c,244 :: 		if (fabs(L[p][q]) < jac_coe*sqrt(diag_toplam/TrainPicture)) basla = 0; //e-5 yaptý e-7 yapmadý
	R0 <4> <- addr(_p)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_q)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- S0   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- addr(_diag_toplam)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 / S1   (midx: 9)
	S0 <4> <- S0   (midx: 0)
	CALL _sqrt   (midx: 0)
	R0 <4> <- addr(_jac_coe)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S1 * S0   (midx: 9)
	S0 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	if ( S0 >= S1) then goto 78   (midx: 9)
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_basla)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
78:   (midx: 0)
//DCVA_GUI_events_code.c,246 :: 		for(y1=60;y1<80;y1++){
	R1 <4> <- 60   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
79:   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 80) then goto 80   (midx: 2)
//DCVA_GUI_events_code.c,247 :: 		for(x1=120;x1<160;x1++)
	R1 <4> <- 120   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
82:   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 160) then goto 83   (midx: 2)
//DCVA_GUI_events_code.c,248 :: 		TFT_Dot(x1, y1, CL_BLUE);}
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R2 <2> <- 31   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_Dot   (midx: 0)
//DCVA_GUI_events_code.c,247 :: 		for(x1=120;x1<160;x1++)
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,248 :: 		TFT_Dot(x1, y1, CL_BLUE);}
	goto	82   (midx: 0)
83:   (midx: 0)
//DCVA_GUI_events_code.c,246 :: 		for(y1=60;y1<80;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,248 :: 		TFT_Dot(x1, y1, CL_BLUE);}
	goto	79   (midx: 0)
80:   (midx: 0)
//DCVA_GUI_events_code.c,249 :: 		iteration1 = iteration1 + 1;
	R1 <4> <- addr(_iteration1)   (midx: 0)
	R0 <2> <- [R1]   (midx: 0)
	R0 <2> <-  R0 + 1   (midx: 1)
	[R1] <2> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,250 :: 		}
	goto	55   (midx: 0)
56:   (midx: 0)
//DCVA_GUI_events_code.c,252 :: 		TFT_Write_Text("JACOBI ITERATION OK", 30, 110);
	R0 <4> <- #?lstr5_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 110   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,253 :: 		TFT_Write_Text("EIGENVECTOR ?", 30, 130);
	R0 <4> <- #?lstr6_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 130   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,257 :: 		temp1 = -1e+20;
	R0 <4> <- -1.000000E+020   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,258 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
85:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 86   (midx: 2)
//DCVA_GUI_events_code.c,259 :: 		for(x1=y1;x1<TrainPicture;x1++){
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
88:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 89   (midx: 2)
//DCVA_GUI_events_code.c,260 :: 		if (L[x1][x1] > temp1) {
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S1 <= S0) then goto 91   (midx: 9)
//DCVA_GUI_events_code.c,261 :: 		temp1 =  L[x1][x1];
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,262 :: 		ii = x1;}}
	R0 <4> <- R2   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
91:   (midx: 0)
//DCVA_GUI_events_code.c,259 :: 		for(x1=y1;x1<TrainPicture;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,262 :: 		ii = x1;}}
	goto	88   (midx: 0)
89:   (midx: 0)
//DCVA_GUI_events_code.c,263 :: 		L[ii][ii] =  L[y1][y1];
	R2 <4> <- addr(_ii)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R3 <4> <-  R1 + R0   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,264 :: 		L[y1][y1] = temp1;
	R0 <4> <- R2   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R0   (midx: 2)
	R1 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,265 :: 		temp1 = -1e+20;
	R0 <4> <- -1.000000E+020   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,266 :: 		for(x1=0;x1<TrainPicture;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
92:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 93   (midx: 2)
//DCVA_GUI_events_code.c,267 :: 		temp2 = V[x1][ii];
	R5 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R5]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R4 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R4 + R0   (midx: 2)
	S0 <4> <- *R1   (midx: 0)
	R3 <4> <- addr(_temp2)   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,268 :: 		V[x1][ii] = V[x1][y1];
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R4 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,269 :: 		V[x1][y1] = temp2;}}   // V[100][100]  but V[100][99]  only 1 eigenvector is rubbish
	R0 <4> <- R5   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R3   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,266 :: 		for(x1=0;x1<TrainPicture;x1++){
	R0 <4> <- R5   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R5] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,269 :: 		V[x1][y1] = temp2;}}   // V[100][100]  but V[100][99]  only 1 eigenvector is rubbish
	goto	92   (midx: 0)
93:   (midx: 0)
//DCVA_GUI_events_code.c,258 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,269 :: 		V[x1][y1] = temp2;}}   // V[100][100]  but V[100][99]  only 1 eigenvector is rubbish
	goto	85   (midx: 0)
86:   (midx: 0)
//DCVA_GUI_events_code.c,271 :: 		TFT_Write_Text("EIGENVECTOR OK", 30, 150);
	R0 <4> <- #?lstr7_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 150   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,274 :: 		TFT_Write_Text("L=> ProjectedImages", 30, 170);
	R0 <4> <- #?lstr8_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 170   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,276 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
95:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 96   (midx: 2)
//DCVA_GUI_events_code.c,277 :: 		for(x1=0;x1<TrainPicture;x1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
98:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 99   (midx: 2)
//DCVA_GUI_events_code.c,278 :: 		L[x1][y1] = 0;}
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,277 :: 		for(x1=0;x1<TrainPicture;x1++)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,278 :: 		L[x1][y1] = 0;}
	goto	98   (midx: 0)
99:   (midx: 0)
//DCVA_GUI_events_code.c,276 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,278 :: 		L[x1][y1] = 0;}
	goto	95   (midx: 0)
96:   (midx: 0)
//DCVA_GUI_events_code.c,280 :: 		TFT_Write_Text("ProjectedImages ?", 30, 190);
	R0 <4> <- #?lstr9_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 190   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,282 :: 		for(y1=0;y1<N;y1++){   // V[100][99]       N=99;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
101:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 102   (midx: 2)
//DCVA_GUI_events_code.c,283 :: 		for(ii=0;ii<row*col;ii++){        //(row*col x picture)(picture x picture - ClassNumber)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
104:   (midx: 0)
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 105   (midx: 2)
//DCVA_GUI_events_code.c,284 :: 		dd = div(ii,100);
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <2> <- 100   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R12 <4> <- addr(FLOC_DCVA_TRAINING+0)   (midx: 0)
	CALL _div   (midx: 0)
	R3 <1> <- 4   (midx: 0)
	R2 <4> <- addr(_dd)   (midx: 0)
	R1 <4> <- addr(FLOC_DCVA_TRAINING+0)   (midx: 0)
107:   (midx: 0)
	R0 <1> <- *R1   (midx: 0)
	[R2] <1> <- R0   (midx: 0)
	R3 <1> <-  R3 - 1   (midx: 0)
	R3 <1> <- R3   (midx: 0)
	R1 <4> <-  R1 + 1   (midx: 0)
	R2 <4> <-  R2 + 1   (midx: 0)
	if (R3) then goto 107   (midx: 0)
   (midx: 0)
//DCVA_GUI_events_code.c,285 :: 		temp1 = 0;                    // MTemp => norm tutucu
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,286 :: 		for(x1=0;x1<TrainPicture;x1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
108:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 109   (midx: 2)
//DCVA_GUI_events_code.c,287 :: 		temp1 = temp1 + (Ear[x1*row*col + ii] - R[dd.quot][dd.rem])*V[x1][y1]; //A*V
	R0 <4> <- addr(_row)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R3 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R3]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_col)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 * R0   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- #_Ear   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R2 <1> <- *R0   (midx: 0)
	R0 <4> <- addr(_dd+0)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_dd+2)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S1 <4> <- (type cast)R2   (midx: 0)
	S0 <4> <- *R0   (midx: 0)
	S1 <4> <-  S1 - S0   (midx: 9)
	R0 <4> <- R3   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S1 <4> <-  S1 * S0   (midx: 9)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,286 :: 		for(x1=0;x1<TrainPicture;x1++)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,287 :: 		temp1 = temp1 + (Ear[x1*row*col + ii] - R[dd.quot][dd.rem])*V[x1][y1]; //A*V
	goto	108   (midx: 0)
109:   (midx: 0)
//DCVA_GUI_events_code.c,288 :: 		MTemp[y1] =  MTemp[y1] + temp1*temp1;}}
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_MTemp   (midx: 0)
	R2 <4> <-  R0 + R1   (midx: 2)
	S2 <4> <- *R2   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,283 :: 		for(ii=0;ii<row*col;ii++){        //(row*col x picture)(picture x picture - ClassNumber)
	R1 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,288 :: 		MTemp[y1] =  MTemp[y1] + temp1*temp1;}}
	goto	104   (midx: 0)
105:   (midx: 0)
//DCVA_GUI_events_code.c,282 :: 		for(y1=0;y1<N;y1++){   // V[100][99]       N=99;
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,288 :: 		MTemp[y1] =  MTemp[y1] + temp1*temp1;}}
	goto	101   (midx: 0)
102:   (midx: 0)
//DCVA_GUI_events_code.c,290 :: 		TFT_Write_Text("NORM KEEP OK", 30, 210);
	R0 <4> <- #?lstr10_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 210   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,292 :: 		for(y1=0;y1<N;y1++){        // V=V/norm_tutucu       100x99
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
111:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 112   (midx: 2)
//DCVA_GUI_events_code.c,293 :: 		for(x1=0;x1<TrainPicture;x1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
114:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 115   (midx: 2)
//DCVA_GUI_events_code.c,294 :: 		V[x1][y1] = (V[x1][y1])/(sqrt(MTemp[y1]));}
	R0 <4> <- addr(_x1)   (midx: 0)
	FLOC_DCVA_TRAINING+8 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R2 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R2 + R1   (midx: 2)
	FLOC_DCVA_TRAINING+4 <4> <- R0   (midx: 0)
	S0 <4> <- *R0   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- S0   (midx: 0)
	R0 <4> <- #_MTemp   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _sqrt   (midx: 0)
	S1 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	S0 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- FLOC_DCVA_TRAINING+4   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,293 :: 		for(x1=0;x1<TrainPicture;x1++)
	R1 <4> <- FLOC_DCVA_TRAINING+8   (midx: 0)
	R0 <4> <- R1   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,294 :: 		V[x1][y1] = (V[x1][y1])/(sqrt(MTemp[y1]));}
	goto	114   (midx: 0)
115:   (midx: 0)
//DCVA_GUI_events_code.c,292 :: 		for(y1=0;y1<N;y1++){        // V=V/norm_tutucu       100x99
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,294 :: 		V[x1][y1] = (V[x1][y1])/(sqrt(MTemp[y1]));}
	goto	111   (midx: 0)
112:   (midx: 0)
//DCVA_GUI_events_code.c,296 :: 		TFT_Write_Text("V=V/NORM KEEP OK", 30, 230);
	R0 <4> <- #?lstr11_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 230   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,298 :: 		for(x1=0;x1<TrainPicture;x1++){        // D = V
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
117:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 118   (midx: 2)
//DCVA_GUI_events_code.c,299 :: 		for(y1=0;y1<TrainPicture;y1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
120:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 121   (midx: 2)
//DCVA_GUI_events_code.c,300 :: 		D[x1][y1] = V[x1][y1];}
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R4 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_D   (midx: 0)
	R1 <4> <-  R0 + R4   (midx: 2)
	R3 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R3]   (midx: 0)
	R2 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R2   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R0 <4> <-  R0 + R4   (midx: 2)
	R0 <4> <-  R0 + R2   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,299 :: 		for(y1=0;y1<TrainPicture;y1++)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,300 :: 		D[x1][y1] = V[x1][y1];}
	goto	120   (midx: 0)
121:   (midx: 0)
//DCVA_GUI_events_code.c,298 :: 		for(x1=0;x1<TrainPicture;x1++){        // D = V
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,300 :: 		D[x1][y1] = V[x1][y1];}
	goto	117   (midx: 0)
118:   (midx: 0)
//DCVA_GUI_events_code.c,302 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
123:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 124   (midx: 2)
//DCVA_GUI_events_code.c,303 :: 		for(x1=0;x1<TrainPicture;x1++){        //(picture x row*col)(row*col x 1)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
126:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 127   (midx: 2)
//DCVA_GUI_events_code.c,304 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,305 :: 		for(ii=0;ii<row*col;ii++){     // Gtemp = A' * (EarNumber-m_ort)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
129:   (midx: 0)
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 130   (midx: 2)
//DCVA_GUI_events_code.c,306 :: 		dd = div(ii,100);
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <2> <- 100   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R12 <4> <- addr(FLOC_DCVA_TRAINING+0)   (midx: 0)
	CALL _div   (midx: 0)
	R3 <1> <- 4   (midx: 0)
	R2 <4> <- addr(_dd)   (midx: 0)
	R1 <4> <- addr(FLOC_DCVA_TRAINING+0)   (midx: 0)
132:   (midx: 0)
	R0 <1> <- *R1   (midx: 0)
	[R2] <1> <- R0   (midx: 0)
	R3 <1> <-  R3 - 1   (midx: 0)
	R3 <1> <- R3   (midx: 0)
	R1 <4> <-  R1 + 1   (midx: 0)
	R2 <4> <-  R2 + 1   (midx: 0)
	if (R3) then goto 132   (midx: 0)
   (midx: 0)
//DCVA_GUI_events_code.c,307 :: 		temp1 = temp1 + (Ear[y1*row*col+ii] - R[dd.quot][dd.rem])*(Ear[x1*row*col+ii] - R[dd.quot][dd.rem]);}
	R5 <4> <- addr(_row)   (midx: 0)
	R1 <4> <- [R5]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R4 <4> <- addr(_col)   (midx: 0)
	R0 <4> <- [R4]   (midx: 0)
	R1 <4> <-  R1 * R0   (midx: 2)
	R3 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R3]   (midx: 0)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- #_Ear   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R2 <1> <- *R0   (midx: 0)
	R0 <4> <- addr(_dd+0)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_dd+2)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- (type cast)R2   (midx: 0)
	S2 <4> <- *R1   (midx: 0)
	S1 <4> <-  S0 - S2   (midx: 9)
	R0 <4> <- R5   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- R4   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 * R0   (midx: 2)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- #_Ear   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <1> <- *R0   (midx: 0)
	S0 <4> <- (type cast)R0   (midx: 0)
	S0 <4> <-  S0 - S2   (midx: 9)
	S1 <4> <-  S1 * S0   (midx: 9)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,305 :: 		for(ii=0;ii<row*col;ii++){     // Gtemp = A' * (EarNumber-m_ort)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,307 :: 		temp1 = temp1 + (Ear[y1*row*col+ii] - R[dd.quot][dd.rem])*(Ear[x1*row*col+ii] - R[dd.quot][dd.rem]);}
	goto	129   (midx: 0)
130:   (midx: 0)
//DCVA_GUI_events_code.c,308 :: 		GTemp[x1] =  temp1;}
	R2 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_GTemp   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,303 :: 		for(x1=0;x1<TrainPicture;x1++){        //(picture x row*col)(row*col x 1)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,308 :: 		GTemp[x1] =  temp1;}
	goto	126   (midx: 0)
127:   (midx: 0)
//DCVA_GUI_events_code.c,309 :: 		for(x1=0;x1<N;x1++){   // ProjectedImages = V' *  GTemp = V' * A' * (EarNumber-m_ort)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
133:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 134   (midx: 2)
//DCVA_GUI_events_code.c,310 :: 		temp2 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp2)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,311 :: 		for(z1=0;z1<TrainPicture;z1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
136:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 137   (midx: 2)
//DCVA_GUI_events_code.c,312 :: 		temp2 = temp2 + V[z1][x1]*GTemp[z1]; // L'=L[y1][x1]; L= L[x1][y1]
	R3 <4> <- addr(_z1)   (midx: 0)
	R1 <4> <- [R3]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_GTemp   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	S0 <4> <- *R2   (midx: 0)
	S1 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- addr(_temp2)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,311 :: 		for(z1=0;z1<TrainPicture;z1++)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,312 :: 		temp2 = temp2 + V[z1][x1]*GTemp[z1]; // L'=L[y1][x1]; L= L[x1][y1]
	goto	136   (midx: 0)
137:   (midx: 0)
//DCVA_GUI_events_code.c,313 :: 		L[x1][y1] = temp2;}} //L[x1][y1] => ProjectedImages[x1][y1]
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- addr(_temp2)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,309 :: 		for(x1=0;x1<N;x1++){   // ProjectedImages = V' *  GTemp = V' * A' * (EarNumber-m_ort)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,313 :: 		L[x1][y1] = temp2;}} //L[x1][y1] => ProjectedImages[x1][y1]
	goto	133   (midx: 0)
134:   (midx: 0)
//DCVA_GUI_events_code.c,302 :: 		for(y1=0;y1<TrainPicture;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,313 :: 		L[x1][y1] = temp2;}} //L[x1][y1] => ProjectedImages[x1][y1]
	goto	123   (midx: 0)
124:   (midx: 0)
//DCVA_GUI_events_code.c,315 :: 		TFT_Write_Text("ProjectedImages OK",30, 250);
	R0 <4> <- #?lstr12_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 250   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,316 :: 		TFT_Write_Text("Sw=Aw*Aw' ?", 30, 270);
	R0 <4> <- #?lstr13_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 270   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,318 :: 		for(ii=0;ii<ClassNumber;ii++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
139:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 140   (midx: 2)
//DCVA_GUI_events_code.c,319 :: 		for(x1=0;x1<N;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
142:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 143   (midx: 2)
//DCVA_GUI_events_code.c,320 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,321 :: 		for(y1=ii*ClassPopulation;y1<(ii+1)*ClassPopulation;y1++)
	R0 <4> <- addr(_ClassPopulation)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
145:   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 + 1   (midx: 2)
	R0 <4> <- addr(_ClassPopulation)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 * R0   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 146   (midx: 2)
//DCVA_GUI_events_code.c,322 :: 		temp1 = temp1 + L[x1][y1];         //  ProjectedImages[99][100]
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,321 :: 		for(y1=ii*ClassPopulation;y1<(ii+1)*ClassPopulation;y1++)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,322 :: 		temp1 = temp1 + L[x1][y1];         //  ProjectedImages[99][100]
	goto	145   (midx: 0)
146:   (midx: 0)
//DCVA_GUI_events_code.c,323 :: 		temp2 = temp1/ClassPopulation;
	R1 <4> <- addr(_ClassPopulation)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 / S1   (midx: 9)
	R0 <4> <- addr(_temp2)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,324 :: 		for(y1=ii*ClassPopulation;y1<(ii+1)*ClassPopulation;y1++)
	R0 <4> <- R1   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
148:   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 + 1   (midx: 2)
	R0 <4> <- addr(_ClassPopulation)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 * R0   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 149   (midx: 2)
//DCVA_GUI_events_code.c,325 :: 		V[x1][y1] = L[x1][y1] - temp2;  }}    // V[99][100] geçiçi => A matris Sw=A*A'
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R4 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R2 <4> <-  R0 + R4   (midx: 2)
	R3 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R3]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R2 + R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R0 <4> <-  R0 + R4   (midx: 2)
	R0 <4> <-  R0 + R1   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R0 <4> <- addr(_temp2)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S1 - S0   (midx: 9)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,324 :: 		for(y1=ii*ClassPopulation;y1<(ii+1)*ClassPopulation;y1++)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,325 :: 		V[x1][y1] = L[x1][y1] - temp2;  }}    // V[99][100] geçiçi => A matris Sw=A*A'
	goto	148   (midx: 0)
149:   (midx: 0)
//DCVA_GUI_events_code.c,319 :: 		for(x1=0;x1<N;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,325 :: 		V[x1][y1] = L[x1][y1] - temp2;  }}    // V[99][100] geçiçi => A matris Sw=A*A'
	goto	142   (midx: 0)
143:   (midx: 0)
//DCVA_GUI_events_code.c,318 :: 		for(ii=0;ii<ClassNumber;ii++){
	R1 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,325 :: 		V[x1][y1] = L[x1][y1] - temp2;  }}    // V[99][100] geçiçi => A matris Sw=A*A'
	goto	139   (midx: 0)
140:   (midx: 0)
//DCVA_GUI_events_code.c,327 :: 		for(x1=0;x1<N;x1++){        // Sw=A*A'   A[99][100] * A'[100][99]
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
151:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 152   (midx: 2)
//DCVA_GUI_events_code.c,328 :: 		for(y1=0;y1<N;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
154:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 155   (midx: 2)
//DCVA_GUI_events_code.c,329 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,330 :: 		for(z1=0;z1<TrainPicture;z1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
157:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 158   (midx: 2)
//DCVA_GUI_events_code.c,331 :: 		temp1 = temp1 + V[x1][z1] * V[y1][z1];
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R4 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R4]   (midx: 0)
	R3 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R3   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <-  R0 + R3   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	S0 <4> <- *R2   (midx: 0)
	S1 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,330 :: 		for(z1=0;z1<TrainPicture;z1++)
	R0 <4> <- R4   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R4] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,331 :: 		temp1 = temp1 + V[x1][z1] * V[y1][z1];
	goto	157   (midx: 0)
158:   (midx: 0)
//DCVA_GUI_events_code.c,332 :: 		R[x1][y1] = temp1;}}   // R[99][99] => Sw=A*A'
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,328 :: 		for(y1=0;y1<N;y1++){
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,332 :: 		R[x1][y1] = temp1;}}   // R[99][99] => Sw=A*A'
	goto	154   (midx: 0)
155:   (midx: 0)
//DCVA_GUI_events_code.c,327 :: 		for(x1=0;x1<N;x1++){        // Sw=A*A'   A[99][100] * A'[100][99]
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,332 :: 		R[x1][y1] = temp1;}}   // R[99][99] => Sw=A*A'
	goto	151   (midx: 0)
152:   (midx: 0)
//DCVA_GUI_events_code.c,334 :: 		TFT_Write_Text("Sw=Aw*Aw' OK", 30, 290);
	R0 <4> <- #?lstr14_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 290   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,336 :: 		for(y1=0;y1<TrainPicture;y1++){       //V   birim matris
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
160:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 161   (midx: 2)
//DCVA_GUI_events_code.c,337 :: 		for(x1=0;x1<TrainPicture;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
163:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 164   (midx: 2)
//DCVA_GUI_events_code.c,338 :: 		if (x1==y1) V[x1][y1] = 1;
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 != R1) then goto 166   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- 1.000000E+000   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
	goto	167   (midx: 0)
166:   (midx: 0)
//DCVA_GUI_events_code.c,339 :: 		else        V[x1][y1] = 0;}}
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
167:   (midx: 0)
//DCVA_GUI_events_code.c,337 :: 		for(x1=0;x1<TrainPicture;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,339 :: 		else        V[x1][y1] = 0;}}
	goto	163   (midx: 0)
164:   (midx: 0)
//DCVA_GUI_events_code.c,336 :: 		for(y1=0;y1<TrainPicture;y1++){       //V   birim matris
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,339 :: 		else        V[x1][y1] = 0;}}
	goto	160   (midx: 0)
161:   (midx: 0)
//DCVA_GUI_events_code.c,341 :: 		TFT_Fill_Screen(CL_BLUE);
	R0 <2> <- 31   (midx: 0)
	CALL _TFT_Fill_Screen   (midx: 0)
//DCVA_GUI_events_code.c,342 :: 		TFT_Write_Text("JACOBI ITERATION-2 ?", 30, 30);     //[V D] = eig(Sw);  R[99][99]
	R0 <4> <- #?lstr15_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 30   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,344 :: 		temp1 = 0;      //en büyük deðer bulma
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,345 :: 		for(y1=0;y1<N;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
168:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 169   (midx: 2)
//DCVA_GUI_events_code.c,346 :: 		for(x1=0;x1<N;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
171:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 172   (midx: 2)
//DCVA_GUI_events_code.c,347 :: 		if ((fabs(R[x1][y1]) > temp1) && (x1 != y1)) {
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	if ( S0 <= S1) then goto 434   (midx: 9)
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 = R1) then goto 433   (midx: 2)
426:   (midx: 0)
//DCVA_GUI_events_code.c,348 :: 		temp1 = fabs(R[x1][y1]);
	R0 <4> <- addr(_x1)   (midx: 0)
	FLOC_DCVA_TRAINING+4 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- R0   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,349 :: 		p=x1;
	R0 <4> <- FLOC_DCVA_TRAINING+4   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_p)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,350 :: 		q=y1;}}}
	R0 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_q)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,347 :: 		if ((fabs(R[x1][y1]) > temp1) && (x1 != y1)) {
434:   (midx: 0)
433:   (midx: 0)
//DCVA_GUI_events_code.c,346 :: 		for(x1=0;x1<N;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,350 :: 		q=y1;}}}
	goto	171   (midx: 0)
172:   (midx: 0)
//DCVA_GUI_events_code.c,345 :: 		for(y1=0;y1<N;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,350 :: 		q=y1;}}}
	goto	168   (midx: 0)
169:   (midx: 0)
//DCVA_GUI_events_code.c,352 :: 		iteration2 = 0;
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_iteration2)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,353 :: 		basla = 1;                              // jacobi iteration döngü baþangýcý
	R1 <2> <- 1   (midx: 0)
	R0 <4> <- addr(_basla)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,354 :: 		while (basla==1){
177:   (midx: 0)
	R0 <4> <- addr(_basla)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	if ( R0 != 1) then goto 178   (midx: 1)
//DCVA_GUI_events_code.c,356 :: 		IntToStr(iteration2,txt1);
	R0 <4> <- addr(_iteration2)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <4> <- #_txt1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _IntToStr   (midx: 0)
//DCVA_GUI_events_code.c,357 :: 		TFT_Write_Text(txt1,120,60);
	R2 <2> <- 60   (midx: 0)
	R1 <2> <- 120   (midx: 0)
	R0 <4> <- #_txt1   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,359 :: 		t = (R[p][q])/((R[q][q])-(R[p][p]));
	R4 <4> <- addr(_p)   (midx: 0)
	R1 <4> <- [R4]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R3 <4> <-  R0 + R1   (midx: 2)
	R1 <4> <- addr(_q)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R2 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R3 + R2   (midx: 2)
	S2 <4> <- *R0   (midx: 0)
	R0 <4> <- R1   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <-  R0 + R2   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R0 <4> <- R4   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R3 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <-  S1 - S0   (midx: 9)
	S0 <4> <-  S2 / S0   (midx: 9)
	R0 <4> <- addr(_t)   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- R0   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,360 :: 		c = 1/(sqrt(t*t+1));
	S1 <4> <-  S0 * S0   (midx: 9)
	S0 <4> <- 1.000000E+000   (midx: 0)
	S0 <4> <-  S1 + S0   (midx: 9)
	S0 <4> <- S0   (midx: 0)
	CALL _sqrt   (midx: 0)
	S1 <4> <- 1.000000E+000   (midx: 0)
	S1 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- addr(_c)   (midx: 0)
	[R0] <4> <- S1   (midx: 0)
//DCVA_GUI_events_code.c,361 :: 		s = t*c;
	R0 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- addr(_s)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,363 :: 		for(y1=0;y1<N;y1++){ //matris çarpýmý D([p q],:) = R'*D([p q],:);
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
179:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 180   (midx: 2)
//DCVA_GUI_events_code.c,364 :: 		temp1 = R[p][y1];
	R0 <4> <- addr(_p)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R8 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R8]   (midx: 0)
	R2 <4> <-  R0 shl 2   (midx: 2)
	R7 <4> <-  R1 + R2   (midx: 2)
	S0 <4> <- *R7   (midx: 0)
	R6 <4> <- addr(_temp1)   (midx: 0)
	[R6] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,365 :: 		temp2 = R[q][y1];
	R5 <4> <- addr(_q)   (midx: 0)
	R1 <4> <- [R5]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <-  R0 + R2   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	R4 <4> <- addr(_temp2)   (midx: 0)
	[R4] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,366 :: 		temp3 = temp1*c + temp2*(-s);
	R2 <4> <- addr(_c)   (midx: 0)
	S1 <4> <- [R2]   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 * S1   (midx: 9)
	R1 <4> <- addr(_s)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	S1 <4> <-  0.000000E+000 - S0   (midx: 9)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R3 <4> <- addr(_temp3)   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,367 :: 		temp4 = temp1*s + temp2*c;
	R0 <4> <- R1   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- R2   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R2 <4> <- addr(_temp4)   (midx: 0)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,368 :: 		R[p][y1] = temp3;
	R0 <4> <- R3   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R7] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,369 :: 		R[q][y1] = temp4;}
	R0 <4> <- R5   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R8   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,363 :: 		for(y1=0;y1<N;y1++){ //matris çarpýmý D([p q],:) = R'*D([p q],:);
	R0 <4> <- R8   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R8] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,369 :: 		R[q][y1] = temp4;}
	goto	179   (midx: 0)
180:   (midx: 0)
//DCVA_GUI_events_code.c,371 :: 		for(x1=0;x1<N;x1++){ //matris çarpýmý D(:,[p q]) = D(:,[p q])*R;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
182:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 183   (midx: 2)
//DCVA_GUI_events_code.c,372 :: 		temp1 = R[x1][p];
	R8 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R8]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R2 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_p)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R7 <4> <-  R2 + R0   (midx: 2)
	S1 <4> <- *R7   (midx: 0)
	R6 <4> <- addr(_temp1)   (midx: 0)
	[R6] <4> <- S1   (midx: 0)
//DCVA_GUI_events_code.c,373 :: 		temp2 = R[x1][q];
	R5 <4> <- addr(_q)   (midx: 0)
	R0 <4> <- [R5]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R2 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	R4 <4> <- addr(_temp2)   (midx: 0)
	[R4] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,374 :: 		temp3 = temp1*c + temp2*(-s);
	R2 <4> <- addr(_c)   (midx: 0)
	S0 <4> <- [R2]   (midx: 0)
	S2 <4> <-  S1 * S0   (midx: 9)
	R1 <4> <- addr(_s)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	S1 <4> <-  0.000000E+000 - S0   (midx: 9)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R3 <4> <- addr(_temp3)   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,375 :: 		temp4 = temp1*s + temp2*c;
	R0 <4> <- R1   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- R2   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R2 <4> <- addr(_temp4)   (midx: 0)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,376 :: 		R[x1][p] = temp3;
	R0 <4> <- R3   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R7] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,377 :: 		R[x1][q] = temp4;}
	R0 <4> <- R8   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R5   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,371 :: 		for(x1=0;x1<N;x1++){ //matris çarpýmý D(:,[p q]) = D(:,[p q])*R;
	R0 <4> <- R8   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R8] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,377 :: 		R[x1][q] = temp4;}
	goto	182   (midx: 0)
183:   (midx: 0)
//DCVA_GUI_events_code.c,379 :: 		for(x1=0;x1<N;x1++){  //matris çarpýmý V(:,[p q]) = V(:,[p q])*R;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
185:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 186   (midx: 2)
//DCVA_GUI_events_code.c,380 :: 		temp1 = V[x1][p];
	R8 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R8]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R2 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_p)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R7 <4> <-  R2 + R0   (midx: 2)
	S1 <4> <- *R7   (midx: 0)
	R6 <4> <- addr(_temp1)   (midx: 0)
	[R6] <4> <- S1   (midx: 0)
//DCVA_GUI_events_code.c,381 :: 		temp2 = V[x1][q];
	R5 <4> <- addr(_q)   (midx: 0)
	R0 <4> <- [R5]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R2 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	R4 <4> <- addr(_temp2)   (midx: 0)
	[R4] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,382 :: 		temp3 = temp1*c + temp2*(-s);
	R2 <4> <- addr(_c)   (midx: 0)
	S0 <4> <- [R2]   (midx: 0)
	S2 <4> <-  S1 * S0   (midx: 9)
	R1 <4> <- addr(_s)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	S1 <4> <-  0.000000E+000 - S0   (midx: 9)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R3 <4> <- addr(_temp3)   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,383 :: 		temp4 = temp1*s + temp2*c;
	R0 <4> <- R1   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- R2   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R2 <4> <- addr(_temp4)   (midx: 0)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,384 :: 		V[x1][p] = temp3;
	R0 <4> <- R3   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R7] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,385 :: 		V[x1][q] = temp4;}
	R0 <4> <- R8   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R5   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,379 :: 		for(x1=0;x1<N;x1++){  //matris çarpýmý V(:,[p q]) = V(:,[p q])*R;
	R0 <4> <- R8   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R8] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,385 :: 		V[x1][q] = temp4;}
	goto	185   (midx: 0)
186:   (midx: 0)
//DCVA_GUI_events_code.c,387 :: 		temp1 = 0;      //en büyük deðer bulma
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,388 :: 		for(y1=0;y1<N;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
188:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 189   (midx: 2)
//DCVA_GUI_events_code.c,389 :: 		for(x1=0;x1<N;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
191:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 192   (midx: 2)
//DCVA_GUI_events_code.c,390 :: 		if ((fabs(R[x1][y1]) > temp1) && (x1 != y1)) {
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	if ( S0 <= S1) then goto 436   (midx: 9)
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 = R1) then goto 435   (midx: 2)
425:   (midx: 0)
//DCVA_GUI_events_code.c,391 :: 		temp1 = fabs(R[x1][y1]);
	R0 <4> <- addr(_x1)   (midx: 0)
	FLOC_DCVA_TRAINING+4 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- R0   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,392 :: 		p=x1;
	R0 <4> <- FLOC_DCVA_TRAINING+4   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_p)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,393 :: 		q=y1;}}}
	R0 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_q)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,390 :: 		if ((fabs(R[x1][y1]) > temp1) && (x1 != y1)) {
436:   (midx: 0)
435:   (midx: 0)
//DCVA_GUI_events_code.c,389 :: 		for(x1=0;x1<N;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,393 :: 		q=y1;}}}
	goto	191   (midx: 0)
192:   (midx: 0)
//DCVA_GUI_events_code.c,388 :: 		for(y1=0;y1<N;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,393 :: 		q=y1;}}}
	goto	188   (midx: 0)
189:   (midx: 0)
//DCVA_GUI_events_code.c,395 :: 		diag_toplam=0;            // döngüden çýkma eþik deðeri
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_diag_toplam)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,396 :: 		for(x1=0;x1<N;x1++)  diag_toplam = diag_toplam + R[x1][x1]*R[x1][x1];
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
197:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 198   (midx: 2)
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S1 <4> <-  S0 * S0   (midx: 9)
	R0 <4> <- addr(_diag_toplam)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
	goto	197   (midx: 0)
198:   (midx: 0)
//DCVA_GUI_events_code.c,397 :: 		if (fabs(R[p][q]) < jac_coe*sqrt(diag_toplam/N)) basla = 0;
	R0 <4> <- addr(_p)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_q)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- S0   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- addr(_diag_toplam)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 / S1   (midx: 9)
	S0 <4> <- S0   (midx: 0)
	CALL _sqrt   (midx: 0)
	R0 <4> <- addr(_jac_coe)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S1 * S0   (midx: 9)
	S0 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	if ( S0 >= S1) then goto 200   (midx: 9)
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_basla)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
200:   (midx: 0)
//DCVA_GUI_events_code.c,399 :: 		for(y1=60;y1<80;y1++){
	R1 <4> <- 60   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
201:   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 80) then goto 202   (midx: 2)
//DCVA_GUI_events_code.c,400 :: 		for(x1=120;x1<160;x1++)
	R1 <4> <- 120   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
204:   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 160) then goto 205   (midx: 2)
//DCVA_GUI_events_code.c,401 :: 		TFT_Dot(x1, y1, CL_BLUE);}
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R2 <2> <- 31   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_Dot   (midx: 0)
//DCVA_GUI_events_code.c,400 :: 		for(x1=120;x1<160;x1++)
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,401 :: 		TFT_Dot(x1, y1, CL_BLUE);}
	goto	204   (midx: 0)
205:   (midx: 0)
//DCVA_GUI_events_code.c,399 :: 		for(y1=60;y1<80;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,401 :: 		TFT_Dot(x1, y1, CL_BLUE);}
	goto	201   (midx: 0)
202:   (midx: 0)
//DCVA_GUI_events_code.c,402 :: 		iteration2 = iteration2 + 1;
	R1 <4> <- addr(_iteration2)   (midx: 0)
	R0 <2> <- [R1]   (midx: 0)
	R0 <2> <-  R0 + 1   (midx: 1)
	[R1] <2> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,403 :: 		}
	goto	177   (midx: 0)
178:   (midx: 0)
//DCVA_GUI_events_code.c,405 :: 		TFT_Write_Text("JACOBI ITERATION-2 OK", 30, 50);
	R0 <4> <- #?lstr16_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 50   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,406 :: 		TFT_Write_Text("V_Sw ?", 30, 70);
	R0 <4> <- #?lstr17_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 70   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,410 :: 		temp1 = -1e+20;
	R0 <4> <- -1.000000E+020   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,411 :: 		for(y1=0;y1<N;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
207:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 208   (midx: 2)
//DCVA_GUI_events_code.c,412 :: 		for(x1=y1;x1<N;x1++){
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
210:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 211   (midx: 2)
//DCVA_GUI_events_code.c,413 :: 		if (R[x1][x1] > temp1) {
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S1 <= S0) then goto 213   (midx: 9)
//DCVA_GUI_events_code.c,414 :: 		temp1 =  R[x1][x1];
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,415 :: 		ii = x1;}}
	R0 <4> <- R2   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
213:   (midx: 0)
//DCVA_GUI_events_code.c,412 :: 		for(x1=y1;x1<N;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,415 :: 		ii = x1;}}
	goto	210   (midx: 0)
211:   (midx: 0)
//DCVA_GUI_events_code.c,416 :: 		R[ii][ii] =  R[y1][y1];
	R2 <4> <- addr(_ii)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R3 <4> <-  R1 + R0   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,417 :: 		R[y1][y1] = temp1;
	R0 <4> <- R2   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R0   (midx: 2)
	R1 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,418 :: 		temp1 = -1e+20;
	R0 <4> <- -1.000000E+020   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,419 :: 		for(x1=0;x1<N;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
214:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 215   (midx: 2)
//DCVA_GUI_events_code.c,420 :: 		temp2 = V[x1][ii];
	R5 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R5]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R4 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R4 + R0   (midx: 2)
	S0 <4> <- *R1   (midx: 0)
	R3 <4> <- addr(_temp2)   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,421 :: 		V[x1][ii] = V[x1][y1];
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R4 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,422 :: 		V[x1][y1] = temp2;}}  // V[99][99]  but V_Sw[99][80]  19 eigenvectors are rubbish
	R0 <4> <- R5   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R3   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,419 :: 		for(x1=0;x1<N;x1++){
	R0 <4> <- R5   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R5] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,422 :: 		V[x1][y1] = temp2;}}  // V[99][99]  but V_Sw[99][80]  19 eigenvectors are rubbish
	goto	214   (midx: 0)
215:   (midx: 0)
//DCVA_GUI_events_code.c,411 :: 		for(y1=0;y1<N;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,422 :: 		V[x1][y1] = temp2;}}  // V[99][99]  but V_Sw[99][80]  19 eigenvectors are rubbish
	goto	207   (midx: 0)
208:   (midx: 0)
//DCVA_GUI_events_code.c,424 :: 		TFT_Write_Text("V_Sw OK", 30, 90);
	R0 <4> <- #?lstr18_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 90   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,426 :: 		for(x1=0;x1<N;x1++){        // R[99][99]=V_Sw[99][80] * V_Sw'[80][99]=
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
217:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 218   (midx: 2)
//DCVA_GUI_events_code.c,427 :: 		for(y1=0;y1<N;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
220:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 221   (midx: 2)
//DCVA_GUI_events_code.c,428 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,429 :: 		for(z1=0;z1<N-(ClassNumber-1);z1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
223:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 - 1   (midx: 2)
	R0 <4> <- addr(_N)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 - R1   (midx: 2)
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 224   (midx: 2)
//DCVA_GUI_events_code.c,430 :: 		temp1 = temp1 + V[x1][z1]* V[y1][z1];
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R4 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R4]   (midx: 0)
	R3 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R3   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <-  R0 + R3   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	S0 <4> <- *R2   (midx: 0)
	S1 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,429 :: 		for(z1=0;z1<N-(ClassNumber-1);z1++)
	R0 <4> <- R4   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R4] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,430 :: 		temp1 = temp1 + V[x1][z1]* V[y1][z1];
	goto	223   (midx: 0)
224:   (midx: 0)
//DCVA_GUI_events_code.c,431 :: 		R[x1][y1] = temp1; }}
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,427 :: 		for(y1=0;y1<N;y1++){
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,431 :: 		R[x1][y1] = temp1; }}
	goto	220   (midx: 0)
221:   (midx: 0)
//DCVA_GUI_events_code.c,426 :: 		for(x1=0;x1<N;x1++){        // R[99][99]=V_Sw[99][80] * V_Sw'[80][99]=
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,431 :: 		R[x1][y1] = temp1; }}
	goto	217   (midx: 0)
218:   (midx: 0)
//DCVA_GUI_events_code.c,433 :: 		for(ii=0;ii<ClassNumber;ii++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
226:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 227   (midx: 2)
//DCVA_GUI_events_code.c,434 :: 		for(x1=0;x1<N;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
229:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 230   (midx: 2)
//DCVA_GUI_events_code.c,435 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,436 :: 		for(z1=0;z1<N;z1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
232:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 233   (midx: 2)
//DCVA_GUI_events_code.c,437 :: 		temp1 = temp1 + R[x1][z1]*L[z1][ClassPopulation*ii];
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R4 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R4]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R3 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R4   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R2 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ClassPopulation)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R2 + R0   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	S0 <4> <- *R3   (midx: 0)
	S1 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,436 :: 		for(z1=0;z1<N;z1++)
	R0 <4> <- R4   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R4] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,437 :: 		temp1 = temp1 + R[x1][z1]*L[z1][ClassPopulation*ii];
	goto	232   (midx: 0)
233:   (midx: 0)
//DCVA_GUI_events_code.c,438 :: 		V[x1][ii] = L[x1][ClassPopulation*ii] - temp1;}}      // V[99][20] => Xcom
	R5 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R5]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R4 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R2 <4> <-  R0 + R4   (midx: 2)
	R1 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R3 <4> <-  R2 + R0   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R2 <4> <-  R0 + R4   (midx: 2)
	R0 <4> <- R1   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ClassPopulation)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R2 + R0   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S1 - S0   (midx: 9)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,434 :: 		for(x1=0;x1<N;x1++){
	R0 <4> <- R5   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R5] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,438 :: 		V[x1][ii] = L[x1][ClassPopulation*ii] - temp1;}}      // V[99][20] => Xcom
	goto	229   (midx: 0)
230:   (midx: 0)
//DCVA_GUI_events_code.c,433 :: 		for(ii=0;ii<ClassNumber;ii++){
	R1 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,438 :: 		V[x1][ii] = L[x1][ClassPopulation*ii] - temp1;}}      // V[99][20] => Xcom
	goto	226   (midx: 0)
227:   (midx: 0)
//DCVA_GUI_events_code.c,440 :: 		TFT_Write_Text("Xcom OK", 30, 110);
	R0 <4> <- #?lstr19_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 110   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,442 :: 		for(x1=0;x1<N;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
235:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 236   (midx: 2)
//DCVA_GUI_events_code.c,443 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,444 :: 		for(y1=0;y1<ClassNumber;y1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
238:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 239   (midx: 2)
//DCVA_GUI_events_code.c,445 :: 		temp1 = temp1 + V[x1][y1];
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,444 :: 		for(y1=0;y1<ClassNumber;y1++)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,445 :: 		temp1 = temp1 + V[x1][y1];
	goto	238   (midx: 0)
239:   (midx: 0)
//DCVA_GUI_events_code.c,446 :: 		temp2 = temp1/ClassNumber;
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 / S1   (midx: 9)
	R0 <4> <- addr(_temp2)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,447 :: 		for(y1=0;y1<ClassNumber;y1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
241:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 242   (midx: 2)
//DCVA_GUI_events_code.c,448 :: 		V[x1][y1] = V[x1][y1] - temp2;}     // V[99][20] => Xcom => convert => Acom
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R3 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R3]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R0   (midx: 2)
	S1 <4> <- *R2   (midx: 0)
	R0 <4> <- addr(_temp2)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S1 - S0   (midx: 9)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,447 :: 		for(y1=0;y1<ClassNumber;y1++)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,448 :: 		V[x1][y1] = V[x1][y1] - temp2;}     // V[99][20] => Xcom => convert => Acom
	goto	241   (midx: 0)
242:   (midx: 0)
//DCVA_GUI_events_code.c,442 :: 		for(x1=0;x1<N;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,448 :: 		V[x1][y1] = V[x1][y1] - temp2;}     // V[99][20] => Xcom => convert => Acom
	goto	235   (midx: 0)
236:   (midx: 0)
//DCVA_GUI_events_code.c,450 :: 		TFT_Write_Text("Acom OK", 30, 130);
	R0 <4> <- #?lstr20_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 130   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,452 :: 		for(x1=0;x1<ClassNumber;x1++){        // SL[20][20] = SLcom = Acom'[20][99] * Acom[99][20]=
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
244:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 245   (midx: 2)
//DCVA_GUI_events_code.c,453 :: 		for(y1=0;y1<ClassNumber;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
247:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 248   (midx: 2)
//DCVA_GUI_events_code.c,454 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,455 :: 		for(z1=0;z1<N;z1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
250:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 251   (midx: 2)
//DCVA_GUI_events_code.c,456 :: 		temp1 = temp1 + V[z1][x1]* V[z1][y1];
	R3 <4> <- addr(_z1)   (midx: 0)
	R1 <4> <- [R3]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	S0 <4> <- *R2   (midx: 0)
	S1 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,455 :: 		for(z1=0;z1<N;z1++)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,456 :: 		temp1 = temp1 + V[z1][x1]* V[z1][y1];
	goto	250   (midx: 0)
251:   (midx: 0)
//DCVA_GUI_events_code.c,457 :: 		SL[x1][y1] = temp1; }}
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,453 :: 		for(y1=0;y1<ClassNumber;y1++){
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,457 :: 		SL[x1][y1] = temp1; }}
	goto	247   (midx: 0)
248:   (midx: 0)
//DCVA_GUI_events_code.c,452 :: 		for(x1=0;x1<ClassNumber;x1++){        // SL[20][20] = SLcom = Acom'[20][99] * Acom[99][20]=
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,457 :: 		SL[x1][y1] = temp1; }}
	goto	244   (midx: 0)
245:   (midx: 0)
//DCVA_GUI_events_code.c,459 :: 		TFT_Write_Text("SLcom OK", 30, 150);
	R0 <4> <- #?lstr21_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 150   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,461 :: 		for(y1=0;y1<ClassNumber;y1++){       //SV   birim matris
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
253:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 254   (midx: 2)
//DCVA_GUI_events_code.c,462 :: 		for(x1=0;x1<ClassNumber;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
256:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 257   (midx: 2)
//DCVA_GUI_events_code.c,463 :: 		if (x1==y1) SV[x1][y1] = 1;
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 != R1) then goto 259   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SV   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- 1.000000E+000   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
	goto	260   (midx: 0)
259:   (midx: 0)
//DCVA_GUI_events_code.c,464 :: 		else        SV[x1][y1] = 0;}}
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SV   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
260:   (midx: 0)
//DCVA_GUI_events_code.c,462 :: 		for(x1=0;x1<ClassNumber;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,464 :: 		else        SV[x1][y1] = 0;}}
	goto	256   (midx: 0)
257:   (midx: 0)
//DCVA_GUI_events_code.c,461 :: 		for(y1=0;y1<ClassNumber;y1++){       //SV   birim matris
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,464 :: 		else        SV[x1][y1] = 0;}}
	goto	253   (midx: 0)
254:   (midx: 0)
//DCVA_GUI_events_code.c,466 :: 		TFT_Write_Text("JACOBI ITERATION-3 ?", 30, 170);
	R0 <4> <- #?lstr22_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 170   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,468 :: 		temp1 = 0;      //en büyük deðer bulma
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,469 :: 		for(y1=0;y1<ClassNumber;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
261:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 262   (midx: 2)
//DCVA_GUI_events_code.c,470 :: 		for(x1=0;x1<ClassNumber;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
264:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 265   (midx: 2)
//DCVA_GUI_events_code.c,471 :: 		if ((fabs(SL[x1][y1]) > temp1) && (x1 != y1)) {
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	if ( S0 <= S1) then goto 438   (midx: 9)
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 = R1) then goto 437   (midx: 2)
424:   (midx: 0)
//DCVA_GUI_events_code.c,472 :: 		temp1 = fabs(SL[x1][y1]);
	R0 <4> <- addr(_x1)   (midx: 0)
	FLOC_DCVA_TRAINING+4 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- R0   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,473 :: 		p=x1;
	R0 <4> <- FLOC_DCVA_TRAINING+4   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_p)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,474 :: 		q=y1;}}}
	R0 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_q)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,471 :: 		if ((fabs(SL[x1][y1]) > temp1) && (x1 != y1)) {
438:   (midx: 0)
437:   (midx: 0)
//DCVA_GUI_events_code.c,470 :: 		for(x1=0;x1<ClassNumber;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,474 :: 		q=y1;}}}
	goto	264   (midx: 0)
265:   (midx: 0)
//DCVA_GUI_events_code.c,469 :: 		for(y1=0;y1<ClassNumber;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,474 :: 		q=y1;}}}
	goto	261   (midx: 0)
262:   (midx: 0)
//DCVA_GUI_events_code.c,476 :: 		iteration3 = 0;
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_iteration3)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,477 :: 		basla = 1;                              // jacobi iteration döngü baþangýcý
	R1 <2> <- 1   (midx: 0)
	R0 <4> <- addr(_basla)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,478 :: 		while (basla==1){
270:   (midx: 0)
	R0 <4> <- addr(_basla)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	if ( R0 != 1) then goto 271   (midx: 1)
//DCVA_GUI_events_code.c,480 :: 		IntToStr(iteration3,txt1);
	R0 <4> <- addr(_iteration3)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <4> <- #_txt1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _IntToStr   (midx: 0)
//DCVA_GUI_events_code.c,481 :: 		TFT_Write_Text(txt1,120,60);
	R2 <2> <- 60   (midx: 0)
	R1 <2> <- 120   (midx: 0)
	R0 <4> <- #_txt1   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,483 :: 		t = (SL[p][q])/((SL[q][q])-(SL[p][p]));
	R4 <4> <- addr(_p)   (midx: 0)
	R1 <4> <- [R4]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R3 <4> <-  R0 + R1   (midx: 2)
	R1 <4> <- addr(_q)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R2 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R3 + R2   (midx: 2)
	S2 <4> <- *R0   (midx: 0)
	R0 <4> <- R1   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <-  R0 + R2   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R0 <4> <- R4   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R3 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <-  S1 - S0   (midx: 9)
	S0 <4> <-  S2 / S0   (midx: 9)
	R0 <4> <- addr(_t)   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- R0   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,484 :: 		c = 1/(sqrt(t*t+1));
	S1 <4> <-  S0 * S0   (midx: 9)
	S0 <4> <- 1.000000E+000   (midx: 0)
	S0 <4> <-  S1 + S0   (midx: 9)
	S0 <4> <- S0   (midx: 0)
	CALL _sqrt   (midx: 0)
	S1 <4> <- 1.000000E+000   (midx: 0)
	S1 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- addr(_c)   (midx: 0)
	[R0] <4> <- S1   (midx: 0)
//DCVA_GUI_events_code.c,485 :: 		s = t*c;
	R0 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- addr(_s)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,487 :: 		for(y1=0;y1<ClassNumber;y1++){ //matris çarpýmý D([p q],:) = R'*D([p q],:);
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
272:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 273   (midx: 2)
//DCVA_GUI_events_code.c,488 :: 		temp1 = SL[p][y1];
	R0 <4> <- addr(_p)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R8 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R8]   (midx: 0)
	R2 <4> <-  R0 shl 2   (midx: 2)
	R7 <4> <-  R1 + R2   (midx: 2)
	S0 <4> <- *R7   (midx: 0)
	R6 <4> <- addr(_temp1)   (midx: 0)
	[R6] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,489 :: 		temp2 = SL[q][y1];
	R5 <4> <- addr(_q)   (midx: 0)
	R1 <4> <- [R5]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <-  R0 + R2   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	R4 <4> <- addr(_temp2)   (midx: 0)
	[R4] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,490 :: 		temp3 = temp1*c + temp2*(-s);
	R2 <4> <- addr(_c)   (midx: 0)
	S1 <4> <- [R2]   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 * S1   (midx: 9)
	R1 <4> <- addr(_s)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	S1 <4> <-  0.000000E+000 - S0   (midx: 9)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R3 <4> <- addr(_temp3)   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,491 :: 		temp4 = temp1*s + temp2*c;
	R0 <4> <- R1   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- R2   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R2 <4> <- addr(_temp4)   (midx: 0)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,492 :: 		SL[p][y1] = temp3;
	R0 <4> <- R3   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R7] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,493 :: 		SL[q][y1] = temp4;}
	R0 <4> <- R5   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R8   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,487 :: 		for(y1=0;y1<ClassNumber;y1++){ //matris çarpýmý D([p q],:) = R'*D([p q],:);
	R0 <4> <- R8   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R8] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,493 :: 		SL[q][y1] = temp4;}
	goto	272   (midx: 0)
273:   (midx: 0)
//DCVA_GUI_events_code.c,495 :: 		for(x1=0;x1<ClassNumber;x1++){ //matris çarpýmý D(:,[p q]) = D(:,[p q])*R;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
275:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 276   (midx: 2)
//DCVA_GUI_events_code.c,496 :: 		temp1 = SL[x1][p];
	R8 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R8]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R2 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_p)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R7 <4> <-  R2 + R0   (midx: 2)
	S1 <4> <- *R7   (midx: 0)
	R6 <4> <- addr(_temp1)   (midx: 0)
	[R6] <4> <- S1   (midx: 0)
//DCVA_GUI_events_code.c,497 :: 		temp2 = SL[x1][q];
	R5 <4> <- addr(_q)   (midx: 0)
	R0 <4> <- [R5]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R2 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	R4 <4> <- addr(_temp2)   (midx: 0)
	[R4] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,498 :: 		temp3 = temp1*c + temp2*(-s);
	R2 <4> <- addr(_c)   (midx: 0)
	S0 <4> <- [R2]   (midx: 0)
	S2 <4> <-  S1 * S0   (midx: 9)
	R1 <4> <- addr(_s)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	S1 <4> <-  0.000000E+000 - S0   (midx: 9)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R3 <4> <- addr(_temp3)   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,499 :: 		temp4 = temp1*s + temp2*c;
	R0 <4> <- R1   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- R2   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R2 <4> <- addr(_temp4)   (midx: 0)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,500 :: 		SL[x1][p] = temp3;
	R0 <4> <- R3   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R7] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,501 :: 		SL[x1][q] = temp4;}
	R0 <4> <- R8   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R5   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,495 :: 		for(x1=0;x1<ClassNumber;x1++){ //matris çarpýmý D(:,[p q]) = D(:,[p q])*R;
	R0 <4> <- R8   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R8] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,501 :: 		SL[x1][q] = temp4;}
	goto	275   (midx: 0)
276:   (midx: 0)
//DCVA_GUI_events_code.c,503 :: 		for(x1=0;x1<ClassNumber;x1++){  //matris çarpýmý V(:,[p q]) = V(:,[p q])*R;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
278:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 279   (midx: 2)
//DCVA_GUI_events_code.c,504 :: 		temp1 = SV[x1][p];
	R8 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R8]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SV   (midx: 0)
	R2 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_p)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R7 <4> <-  R2 + R0   (midx: 2)
	S1 <4> <- *R7   (midx: 0)
	R6 <4> <- addr(_temp1)   (midx: 0)
	[R6] <4> <- S1   (midx: 0)
//DCVA_GUI_events_code.c,505 :: 		temp2 = SV[x1][q];
	R5 <4> <- addr(_q)   (midx: 0)
	R0 <4> <- [R5]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R2 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	R4 <4> <- addr(_temp2)   (midx: 0)
	[R4] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,506 :: 		temp3 = temp1*c + temp2*(-s);
	R2 <4> <- addr(_c)   (midx: 0)
	S0 <4> <- [R2]   (midx: 0)
	S2 <4> <-  S1 * S0   (midx: 9)
	R1 <4> <- addr(_s)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	S1 <4> <-  0.000000E+000 - S0   (midx: 9)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R3 <4> <- addr(_temp3)   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,507 :: 		temp4 = temp1*s + temp2*c;
	R0 <4> <- R1   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R6   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S2 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- R2   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R4   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 * S1   (midx: 9)
	S0 <4> <-  S2 + S0   (midx: 9)
	R2 <4> <- addr(_temp4)   (midx: 0)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,508 :: 		SV[x1][p] = temp3;
	R0 <4> <- R3   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R7] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,509 :: 		SV[x1][q] = temp4;}
	R0 <4> <- R8   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SV   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R5   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,503 :: 		for(x1=0;x1<ClassNumber;x1++){  //matris çarpýmý V(:,[p q]) = V(:,[p q])*R;
	R0 <4> <- R8   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R8] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,509 :: 		SV[x1][q] = temp4;}
	goto	278   (midx: 0)
279:   (midx: 0)
//DCVA_GUI_events_code.c,511 :: 		temp1 = 0;      //en büyük deðer bulma
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,512 :: 		for(y1=0;y1<ClassNumber;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
281:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 282   (midx: 2)
//DCVA_GUI_events_code.c,513 :: 		for(x1=0;x1<ClassNumber;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
284:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 285   (midx: 2)
//DCVA_GUI_events_code.c,514 :: 		if ((fabs(SL[x1][y1]) > temp1) && (x1 != y1)) {
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	if ( S0 <= S1) then goto 440   (midx: 9)
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 = R1) then goto 439   (midx: 2)
423:   (midx: 0)
//DCVA_GUI_events_code.c,515 :: 		temp1 = fabs(SL[x1][y1]);
	R0 <4> <- addr(_x1)   (midx: 0)
	FLOC_DCVA_TRAINING+4 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- R0   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,516 :: 		p=x1;
	R0 <4> <- FLOC_DCVA_TRAINING+4   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_p)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,517 :: 		q=y1;}}}
	R0 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_q)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,514 :: 		if ((fabs(SL[x1][y1]) > temp1) && (x1 != y1)) {
440:   (midx: 0)
439:   (midx: 0)
//DCVA_GUI_events_code.c,513 :: 		for(x1=0;x1<ClassNumber;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,517 :: 		q=y1;}}}
	goto	284   (midx: 0)
285:   (midx: 0)
//DCVA_GUI_events_code.c,512 :: 		for(y1=0;y1<ClassNumber;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,517 :: 		q=y1;}}}
	goto	281   (midx: 0)
282:   (midx: 0)
//DCVA_GUI_events_code.c,519 :: 		diag_toplam=0;            // döngüden çýkma eþik deðeri
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_diag_toplam)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,520 :: 		for(x1=0;x1<ClassNumber;x1++)  diag_toplam = diag_toplam + SL[x1][x1]*SL[x1][x1];
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
290:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 291   (midx: 2)
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S1 <4> <-  S0 * S0   (midx: 9)
	R0 <4> <- addr(_diag_toplam)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
	goto	290   (midx: 0)
291:   (midx: 0)
//DCVA_GUI_events_code.c,521 :: 		if (fabs(SL[p][q]) < jac_coe*sqrt(diag_toplam/ClassNumber)) basla = 0;
	R0 <4> <- addr(_p)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_q)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _fabs   (midx: 0)
	FLOC_DCVA_TRAINING+0 <4> <- S0   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- addr(_diag_toplam)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 / S1   (midx: 9)
	S0 <4> <- S0   (midx: 0)
	CALL _sqrt   (midx: 0)
	R0 <4> <- addr(_jac_coe)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	S1 <4> <-  S1 * S0   (midx: 9)
	S0 <4> <- FLOC_DCVA_TRAINING+0   (midx: 0)
	if ( S0 >= S1) then goto 293   (midx: 9)
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_basla)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
293:   (midx: 0)
//DCVA_GUI_events_code.c,523 :: 		for(y1=60;y1<80;y1++){
	R1 <4> <- 60   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
294:   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 80) then goto 295   (midx: 2)
//DCVA_GUI_events_code.c,524 :: 		for(x1=120;x1<160;x1++)
	R1 <4> <- 120   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
297:   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 160) then goto 298   (midx: 2)
//DCVA_GUI_events_code.c,525 :: 		TFT_Dot(x1, y1, CL_BLUE);}
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R2 <2> <- 31   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_Dot   (midx: 0)
//DCVA_GUI_events_code.c,524 :: 		for(x1=120;x1<160;x1++)
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,525 :: 		TFT_Dot(x1, y1, CL_BLUE);}
	goto	297   (midx: 0)
298:   (midx: 0)
//DCVA_GUI_events_code.c,523 :: 		for(y1=60;y1<80;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,525 :: 		TFT_Dot(x1, y1, CL_BLUE);}
	goto	294   (midx: 0)
295:   (midx: 0)
//DCVA_GUI_events_code.c,526 :: 		iteration3 = iteration3 + 1;
	R1 <4> <- addr(_iteration3)   (midx: 0)
	R0 <2> <- [R1]   (midx: 0)
	R0 <2> <-  R0 + 1   (midx: 1)
	[R1] <2> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,527 :: 		}
	goto	270   (midx: 0)
271:   (midx: 0)
//DCVA_GUI_events_code.c,529 :: 		TFT_Write_Text("JACOBI ITERATION-3 OK", 30, 190);
	R0 <4> <- #?lstr23_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 190   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,530 :: 		TFT_Write_Text("V_SL ?", 30, 210);
	R0 <4> <- #?lstr24_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 210   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,534 :: 		temp1 = -1e+20;
	R0 <4> <- -1.000000E+020   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,535 :: 		for(y1=0;y1<ClassNumber;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
300:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 301   (midx: 2)
//DCVA_GUI_events_code.c,536 :: 		for(x1=y1;x1<ClassNumber;x1++){
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
303:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 304   (midx: 2)
//DCVA_GUI_events_code.c,537 :: 		if (SL[x1][x1] > temp1) {
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S1 <= S0) then goto 306   (midx: 9)
//DCVA_GUI_events_code.c,538 :: 		temp1 =  SL[x1][x1];
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,539 :: 		ii = x1;}}
	R0 <4> <- R2   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
306:   (midx: 0)
//DCVA_GUI_events_code.c,536 :: 		for(x1=y1;x1<ClassNumber;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,539 :: 		ii = x1;}}
	goto	303   (midx: 0)
304:   (midx: 0)
//DCVA_GUI_events_code.c,540 :: 		SL[ii][ii] =  SL[y1][y1];
	R2 <4> <- addr(_ii)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R3 <4> <-  R1 + R0   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,541 :: 		SL[y1][y1] = temp1;
	R0 <4> <- R2   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R0   (midx: 2)
	R1 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,542 :: 		temp1 = -1e+20;
	R0 <4> <- -1.000000E+020   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,543 :: 		for(x1=0;x1<ClassNumber;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
307:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 308   (midx: 2)
//DCVA_GUI_events_code.c,544 :: 		temp2 = SV[x1][ii];
	R5 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R5]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SV   (midx: 0)
	R4 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R4 + R0   (midx: 2)
	S0 <4> <- *R1   (midx: 0)
	R3 <4> <- addr(_temp2)   (midx: 0)
	[R3] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,545 :: 		SV[x1][ii] = SV[x1][y1];
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R4 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,546 :: 		SV[x1][y1] = temp2;}}   // SV[20][20]  but SV[20][19]  only 1 eigenvector is rubbish
	R0 <4> <- R5   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SV   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R3   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,543 :: 		for(x1=0;x1<ClassNumber;x1++){
	R0 <4> <- R5   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R5] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,546 :: 		SV[x1][y1] = temp2;}}   // SV[20][20]  but SV[20][19]  only 1 eigenvector is rubbish
	goto	307   (midx: 0)
308:   (midx: 0)
//DCVA_GUI_events_code.c,535 :: 		for(y1=0;y1<ClassNumber;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,546 :: 		SV[x1][y1] = temp2;}}   // SV[20][20]  but SV[20][19]  only 1 eigenvector is rubbish
	goto	300   (midx: 0)
301:   (midx: 0)
//DCVA_GUI_events_code.c,548 :: 		TFT_Write_Text("V_SL OK", 30, 230);
	R0 <4> <- #?lstr25_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 230   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,550 :: 		for(x1=0;x1<N;x1++){                    // V_Scom[99][19] = Acom[99][20] * SV[20][19]
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
310:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 311   (midx: 2)
//DCVA_GUI_events_code.c,551 :: 		for(y1=0;y1<(ClassNumber-1);y1++){  // R[99][19]      = V[99][20]    * SV[20][19]
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
313:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 - 1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 314   (midx: 2)
//DCVA_GUI_events_code.c,552 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,553 :: 		for(z1=0;z1<ClassNumber;z1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
316:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 317   (midx: 2)
//DCVA_GUI_events_code.c,554 :: 		temp1 = temp1 + V[x1][z1]* SV[z1][y1];
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R3 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R3]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R3   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SV   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	S0 <4> <- *R2   (midx: 0)
	S1 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,553 :: 		for(z1=0;z1<ClassNumber;z1++)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,554 :: 		temp1 = temp1 + V[x1][z1]* SV[z1][y1];
	goto	316   (midx: 0)
317:   (midx: 0)
//DCVA_GUI_events_code.c,555 :: 		R[x1][y1] = temp1; }}
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,551 :: 		for(y1=0;y1<(ClassNumber-1);y1++){  // R[99][19]      = V[99][20]    * SV[20][19]
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,555 :: 		R[x1][y1] = temp1; }}
	goto	313   (midx: 0)
314:   (midx: 0)
//DCVA_GUI_events_code.c,550 :: 		for(x1=0;x1<N;x1++){                    // V_Scom[99][19] = Acom[99][20] * SV[20][19]
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,555 :: 		R[x1][y1] = temp1; }}
	goto	310   (midx: 0)
311:   (midx: 0)
//DCVA_GUI_events_code.c,557 :: 		for(y1=0;y1<(ClassNumber-1);y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
319:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 - 1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 320   (midx: 2)
//DCVA_GUI_events_code.c,558 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,559 :: 		for(x1=0;x1<N;x1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
322:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 323   (midx: 2)
//DCVA_GUI_events_code.c,560 :: 		temp1 = temp1 + R[x1][y1]*R[x1][y1];
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S1 <4> <-  S0 * S0   (midx: 9)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,559 :: 		for(x1=0;x1<N;x1++)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,560 :: 		temp1 = temp1 + R[x1][y1]*R[x1][y1];
	goto	322   (midx: 0)
323:   (midx: 0)
//DCVA_GUI_events_code.c,561 :: 		temp2 = sqrt(temp1);
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _sqrt   (midx: 0)
	R0 <4> <- addr(_temp2)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,562 :: 		for(x1=0;x1<N;x1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
325:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 326   (midx: 2)
//DCVA_GUI_events_code.c,563 :: 		V[x1][y1] = R[x1][y1]/temp2;}    // V_Scom[99][19] = normc( R[99][19] );
	R4 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R4]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R3 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R2 <4> <-  R0 + R3   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R2 + R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R0 <4> <-  R0 + R3   (midx: 2)
	R0 <4> <-  R0 + R1   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R0 <4> <- addr(_temp2)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S1 / S0   (midx: 9)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,562 :: 		for(x1=0;x1<N;x1++)
	R0 <4> <- R4   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R4] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,563 :: 		V[x1][y1] = R[x1][y1]/temp2;}    // V_Scom[99][19] = normc( R[99][19] );
	goto	325   (midx: 0)
326:   (midx: 0)
//DCVA_GUI_events_code.c,557 :: 		for(y1=0;y1<(ClassNumber-1);y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,563 :: 		V[x1][y1] = R[x1][y1]/temp2;}    // V_Scom[99][19] = normc( R[99][19] );
	goto	319   (midx: 0)
320:   (midx: 0)
//DCVA_GUI_events_code.c,565 :: 		TFT_Write_Text("V_Scom OK", 30, 250);
	R0 <4> <- #?lstr26_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 250   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,566 :: 		TFT_Write_Text("ProjectedImages_DCVA ?", 30, 270);
	R0 <4> <- #?lstr27_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 270   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,568 :: 		for(x1=0;x1<(ClassNumber-1);x1++){       // ProjectedImages_DCVA[19][20] = V_Scom'[19][99] * ProjectedImages[99][20 every class]
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
328:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 - 1   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 329   (midx: 2)
//DCVA_GUI_events_code.c,569 :: 		for(y1=0;y1<ClassNumber;y1++){       // SL[19][20]                   = V'[19][99]    * SV[20][19]
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
331:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 332   (midx: 2)
//DCVA_GUI_events_code.c,570 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,571 :: 		for(z1=0;z1<N;z1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
334:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 335   (midx: 2)
//DCVA_GUI_events_code.c,572 :: 		temp1 = temp1 + V[z1][x1]* L[z1][y1*ClassPopulation];
	R4 <4> <- addr(_z1)   (midx: 0)
	R1 <4> <- [R4]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R2 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R2   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R3 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- #_L   (midx: 0)
	R2 <4> <-  R0 + R2   (midx: 2)
	R0 <4> <- addr(_ClassPopulation)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R2 + R0   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	S0 <4> <- *R3   (midx: 0)
	S1 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,571 :: 		for(z1=0;z1<N;z1++)
	R0 <4> <- R4   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R4] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,572 :: 		temp1 = temp1 + V[z1][x1]* L[z1][y1*ClassPopulation];
	goto	334   (midx: 0)
335:   (midx: 0)
//DCVA_GUI_events_code.c,573 :: 		SL[x1][y1] = temp1; }}          // ProjectedImages_DCVA[19][20]
	R0 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,569 :: 		for(y1=0;y1<ClassNumber;y1++){       // SL[19][20]                   = V'[19][99]    * SV[20][19]
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,573 :: 		SL[x1][y1] = temp1; }}          // ProjectedImages_DCVA[19][20]
	goto	331   (midx: 0)
332:   (midx: 0)
//DCVA_GUI_events_code.c,568 :: 		for(x1=0;x1<(ClassNumber-1);x1++){       // ProjectedImages_DCVA[19][20] = V_Scom'[19][99] * ProjectedImages[99][20 every class]
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,573 :: 		SL[x1][y1] = temp1; }}          // ProjectedImages_DCVA[19][20]
	goto	328   (midx: 0)
329:   (midx: 0)
//DCVA_GUI_events_code.c,575 :: 		TFT_Write_Text("ProjectedImages_DCVA OK", 30, 290);
	R0 <4> <- #?lstr28_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 290   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,576 :: 		DrawScreen(&Screen3);
	R0 <4> <- #_Screen3   (midx: 0)
	CALL _DrawScreen   (midx: 0)
  end
   (midx: 0)
_DCVA_TEST:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,579 :: 		void DCVA_TEST() {
_DCVA_TEST:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,580 :: 		DrawScreen(&Screen4);
	R0 <4> <- #_Screen4   (midx: 0)
	CALL _DrawScreen   (midx: 0)
//DCVA_GUI_events_code.c,581 :: 		test_count = 0;
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_test_count)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,582 :: 		accuracy = 0;
	R1 <2> <- 0   (midx: 0)
	R0 <4> <- addr(_accuracy)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,583 :: 		NormFault=0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_NormFault)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,585 :: 		for(ii=0;ii<row*col;ii++){ // m_ort = row*col x 1        //M_ORT TEKRAR HESAPLANIYOR
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
337:   (midx: 0)
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 338   (midx: 2)
//DCVA_GUI_events_code.c,586 :: 		dd = div(ii,100);
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <2> <- 100   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R12 <4> <- addr(FLOC_DCVA_TEST+0)   (midx: 0)
	CALL _div   (midx: 0)
	R3 <1> <- 4   (midx: 0)
	R2 <4> <- addr(_dd)   (midx: 0)
	R1 <4> <- addr(FLOC_DCVA_TEST+0)   (midx: 0)
340:   (midx: 0)
	R0 <1> <- *R1   (midx: 0)
	[R2] <1> <- R0   (midx: 0)
	R3 <1> <-  R3 - 1   (midx: 0)
	R3 <1> <- R3   (midx: 0)
	R1 <4> <-  R1 + 1   (midx: 0)
	R2 <4> <-  R2 + 1   (midx: 0)
	if (R3) then goto 340   (midx: 0)
   (midx: 0)
//DCVA_GUI_events_code.c,587 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,588 :: 		for(z1=0;(z1<TrainPicture);z1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
341:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 342   (midx: 2)
//DCVA_GUI_events_code.c,589 :: 		temp1 =  temp1 + Ear[row*col*z1+ii];
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R2 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R1 <4> <-  R1 * R0   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- #_Ear   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <1> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,588 :: 		for(z1=0;(z1<TrainPicture);z1++)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,589 :: 		temp1 =  temp1 + Ear[row*col*z1+ii];
	goto	341   (midx: 0)
342:   (midx: 0)
//DCVA_GUI_events_code.c,590 :: 		R[dd.quot][dd.rem] = temp1/TrainPicture;}
	R0 <4> <- addr(_dd+0)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_dd+2)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S1 <4> <- (type cast)S0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 / S1   (midx: 9)
	[R2] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,585 :: 		for(ii=0;ii<row*col;ii++){ // m_ort = row*col x 1        //M_ORT TEKRAR HESAPLANIYOR
	R1 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,590 :: 		R[dd.quot][dd.rem] = temp1/TrainPicture;}
	goto	337   (midx: 0)
338:   (midx: 0)
//DCVA_GUI_events_code.c,592 :: 		for(jj=100;jj<TestPicture+100;jj++) {      //TestPicture  = jj
	R1 <4> <- 100   (midx: 0)
	R0 <4> <- addr(_jj)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
344:   (midx: 0)
	R0 <4> <- addr(_TestPicture)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 + 100   (midx: 2)
	R0 <4> <- addr(_jj)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 345   (midx: 2)
//DCVA_GUI_events_code.c,594 :: 		Delay_ms(2000);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//DCVA_GUI_events_code.c,595 :: 		TFT_Fill_Screen(CL_BLUE);
	R0 <2> <- 31   (midx: 0)
	CALL _TFT_Fill_Screen   (midx: 0)
//DCVA_GUI_events_code.c,596 :: 		test_count = test_count + 1;
	R1 <4> <- addr(_test_count)   (midx: 0)
	R0 <2> <- [R1]   (midx: 0)
	R0 <2> <-  R0 + 1   (midx: 1)
	[R1] <2> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,597 :: 		IntToStr(test_count,txt1);
	R0 <2> <- R0   (midx: 0)
	R1 <4> <- #_txt1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _IntToStr   (midx: 0)
//DCVA_GUI_events_code.c,598 :: 		TFT_Write_Text(txt1,30,40);
	R2 <2> <- 40   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- #_txt1   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,599 :: 		TFT_Write_Text("TEST IMAGE", 60, 40);
	R0 <4> <- #?lstr29_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 40   (midx: 0)
	R1 <2> <- 60   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,601 :: 		ii = 0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,602 :: 		for(y1=0;y1<col;y1++){  // "TestPicture" siyah beyaz yazdýrma
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
348:   (midx: 0)
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 349   (midx: 2)
//DCVA_GUI_events_code.c,603 :: 		for(x1=0;x1<row;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
351:   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 352   (midx: 2)
//DCVA_GUI_events_code.c,604 :: 		temp5 = TFT_RGBToColor16bit(Ear[jj*row*col+ii], Ear[jj*row*col+ii], Ear[jj*row*col+ii]);
	R0 <4> <- addr(_row)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_jj)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_col)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 * R0   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- #_Ear   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <1> <- *R0   (midx: 0)
	R2 <1> <- R0   (midx: 0)
	R1 <1> <- R0   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	R2 <1> <- R2   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	CALL _TFT_RGBToColor16bit   (midx: 0)
	S0 <4> <- (type cast)R0   (midx: 0)
	R0 <4> <- addr(_temp5)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,605 :: 		TFT_Dot(x1+50, y1+60, temp5);
	S0 <2> <- (type cast)S0   (midx: 0)
	R0 <2> <- S0   (midx: 0)
	R2 <2> <- R0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 + 60   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	FLOC_DCVA_TEST+0 <4> <- R0   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 50   (midx: 2)
	R2 <2> <- R2   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_Dot   (midx: 0)
//DCVA_GUI_events_code.c,606 :: 		ii = ii + 1;}}
	R1 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,603 :: 		for(x1=0;x1<row;x1++){
	R1 <4> <- FLOC_DCVA_TEST+0   (midx: 0)
	R0 <4> <- R1   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,606 :: 		ii = ii + 1;}}
	goto	351   (midx: 0)
352:   (midx: 0)
//DCVA_GUI_events_code.c,602 :: 		for(y1=0;y1<col;y1++){  // "TestPicture" siyah beyaz yazdýrma
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,606 :: 		ii = ii + 1;}}
	goto	348   (midx: 0)
349:   (midx: 0)
//DCVA_GUI_events_code.c,608 :: 		for(x1=0;x1<TrainPicture;x1++){    //  MTemp (100x1) = (A)'*(TestPicture - m_ort)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
354:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 355   (midx: 2)
//DCVA_GUI_events_code.c,609 :: 		temp1 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,610 :: 		for(ii=0;ii<row*col;ii++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
357:   (midx: 0)
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 358   (midx: 2)
//DCVA_GUI_events_code.c,611 :: 		dd = div(ii,100);
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <2> <- 100   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	R12 <4> <- addr(FLOC_DCVA_TEST+0)   (midx: 0)
	CALL _div   (midx: 0)
	R3 <1> <- 4   (midx: 0)
	R2 <4> <- addr(_dd)   (midx: 0)
	R1 <4> <- addr(FLOC_DCVA_TEST+0)   (midx: 0)
360:   (midx: 0)
	R0 <1> <- *R1   (midx: 0)
	[R2] <1> <- R0   (midx: 0)
	R3 <1> <-  R3 - 1   (midx: 0)
	R3 <1> <- R3   (midx: 0)
	R1 <4> <-  R1 + 1   (midx: 0)
	R2 <4> <-  R2 + 1   (midx: 0)
	if (R3) then goto 360   (midx: 0)
   (midx: 0)
//DCVA_GUI_events_code.c,612 :: 		temp1 = temp1 + (Ear[row*col*x1 + ii] - R[dd.quot][dd.rem])*(Ear[row*col*jj + ii] - R[dd.quot][dd.rem]);}
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R4 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R4 * R0   (midx: 2)
	R3 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R3]   (midx: 0)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- #_Ear   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R2 <1> <- *R0   (midx: 0)
	R0 <4> <- addr(_dd+0)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_R   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_dd+2)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R1 <4> <-  R1 + R0   (midx: 2)
	S0 <4> <- (type cast)R2   (midx: 0)
	S2 <4> <- *R1   (midx: 0)
	S1 <4> <-  S0 - S2   (midx: 9)
	R0 <4> <- addr(_jj)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R4 * R0   (midx: 2)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- #_Ear   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <1> <- *R0   (midx: 0)
	S0 <4> <- (type cast)R0   (midx: 0)
	S0 <4> <-  S0 - S2   (midx: 9)
	S1 <4> <-  S1 * S0   (midx: 9)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,610 :: 		for(ii=0;ii<row*col;ii++){
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,612 :: 		temp1 = temp1 + (Ear[row*col*x1 + ii] - R[dd.quot][dd.rem])*(Ear[row*col*jj + ii] - R[dd.quot][dd.rem]);}
	goto	357   (midx: 0)
358:   (midx: 0)
//DCVA_GUI_events_code.c,613 :: 		MTemp[x1] = temp1;}   //100x1
	R2 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_MTemp   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_temp1)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,608 :: 		for(x1=0;x1<TrainPicture;x1++){    //  MTemp (100x1) = (A)'*(TestPicture - m_ort)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,613 :: 		MTemp[x1] = temp1;}   //100x1
	goto	354   (midx: 0)
355:   (midx: 0)
//DCVA_GUI_events_code.c,615 :: 		for(y1=0;y1<N;y1++){      // GTemp (99x1) = (V)' * MTemp
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
361:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 362   (midx: 2)
//DCVA_GUI_events_code.c,616 :: 		temp2 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp2)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,617 :: 		for(x1=0;x1<TrainPicture;x1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
364:   (midx: 0)
	R0 <4> <- addr(_TrainPicture)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 365   (midx: 2)
//DCVA_GUI_events_code.c,618 :: 		temp2 = temp2 + D[x1][y1]*MTemp[x1];     //D=V  => L' * A' *  (TestPicture - m_ort)
	R3 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R3]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_D   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_MTemp   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	S0 <4> <- *R2   (midx: 0)
	S1 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- addr(_temp2)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,617 :: 		for(x1=0;x1<TrainPicture;x1++)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,618 :: 		temp2 = temp2 + D[x1][y1]*MTemp[x1];     //D=V  => L' * A' *  (TestPicture - m_ort)
	goto	364   (midx: 0)
365:   (midx: 0)
//DCVA_GUI_events_code.c,619 :: 		GTemp[y1] = temp2;}
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_GTemp   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_temp2)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,615 :: 		for(y1=0;y1<N;y1++){      // GTemp (99x1) = (V)' * MTemp
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,619 :: 		GTemp[y1] = temp2;}
	goto	361   (midx: 0)
362:   (midx: 0)
//DCVA_GUI_events_code.c,621 :: 		for(y1=0;y1<(ClassNumber-1);y1++){      // ProjectedTestImage (19x1) = (V_Scom)' * GTemp
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
367:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 - 1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 368   (midx: 2)
//DCVA_GUI_events_code.c,622 :: 		temp3 = 0;                         // ProjectedTestImage (19x1) = V'[19][99] *  GTemp[99]
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp3)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,623 :: 		for(x1=0;x1<N;x1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
370:   (midx: 0)
	R0 <4> <- addr(_N)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 371   (midx: 2)
//DCVA_GUI_events_code.c,624 :: 		temp3 = temp3 + V[x1][y1]*GTemp[x1];
	R3 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R3]   (midx: 0)
	R0 <4> <- 400   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_V   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R2 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_GTemp   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	S0 <4> <- *R2   (midx: 0)
	S1 <4> <-  S0 * S1   (midx: 9)
	R0 <4> <- addr(_temp3)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,623 :: 		for(x1=0;x1<N;x1++)
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R3] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,624 :: 		temp3 = temp3 + V[x1][y1]*GTemp[x1];
	goto	370   (midx: 0)
371:   (midx: 0)
//DCVA_GUI_events_code.c,625 :: 		ProjectedTestImage[y1] = temp3;}
	R2 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_ProjectedTestImage   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_temp3)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	[R1] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,621 :: 		for(y1=0;y1<(ClassNumber-1);y1++){      // ProjectedTestImage (19x1) = (V_Scom)' * GTemp
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,625 :: 		ProjectedTestImage[y1] = temp3;}
	goto	367   (midx: 0)
368:   (midx: 0)
//DCVA_GUI_events_code.c,627 :: 		EpsilonK = 1e+15;              //ClassNorm bulunmasý
	R0 <4> <- 1.000000E+015   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_EpsilonK)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,628 :: 		for(y1=0;y1<ClassNumber;y1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
373:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 374   (midx: 2)
//DCVA_GUI_events_code.c,629 :: 		temp4 = 0;
	R0 <4> <- 0.000000E+000   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	R0 <4> <- addr(_temp4)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,630 :: 		for(x1=0;x1<(ClassNumber-1);x1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
376:   (midx: 0)
	R0 <4> <- addr(_ClassNumber)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 - 1   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 377   (midx: 2)
//DCVA_GUI_events_code.c,631 :: 		temp4 = temp4 + (SL[x1][y1] - ProjectedTestImage[x1])*(SL[x1][y1] - ProjectedTestImage[x1]);
	R2 <4> <- addr(_x1)   (midx: 0)
	R1 <4> <- [R2]   (midx: 0)
	R0 <4> <- 80   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- #_SL   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <-  R1 + R0   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_ProjectedTestImage   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	S0 <4> <- *R0   (midx: 0)
	S0 <4> <-  S1 - S0   (midx: 9)
	S1 <4> <-  S0 * S0   (midx: 9)
	R0 <4> <- addr(_temp4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,630 :: 		for(x1=0;x1<(ClassNumber-1);x1++)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,631 :: 		temp4 = temp4 + (SL[x1][y1] - ProjectedTestImage[x1])*(SL[x1][y1] - ProjectedTestImage[x1]);
	goto	376   (midx: 0)
377:   (midx: 0)
//DCVA_GUI_events_code.c,632 :: 		temp4 = sqrt(temp4);
	R0 <4> <- addr(_temp4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _sqrt   (midx: 0)
	R0 <4> <- addr(_temp4)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,633 :: 		if (temp4 < EpsilonK) {
	R0 <4> <- addr(_EpsilonK)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	if ( S0 >= S1) then goto 379   (midx: 9)
//DCVA_GUI_events_code.c,634 :: 		EpsilonK = temp4;
	R0 <4> <- addr(_temp4)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_EpsilonK)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,635 :: 		WhoseEar = ClassPopulation*y1;}}
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ClassPopulation)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_WhoseEar)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
379:   (midx: 0)
//DCVA_GUI_events_code.c,628 :: 		for(y1=0;y1<ClassNumber;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,635 :: 		WhoseEar = ClassPopulation*y1;}}
	goto	373   (midx: 0)
374:   (midx: 0)
//DCVA_GUI_events_code.c,638 :: 		NormFault = NormFault + (EpsilonK - DCVA_ORJ[jj-100])*(EpsilonK - DCVA_ORJ[jj-100]);
	R0 <4> <- addr(_jj)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 - 100   (midx: 2)
	R1 <4> <-  R0 shl 2   (midx: 2)
	R0 <4> <- #_DCVA_ORJ   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	S1 <4> <- *R0   (midx: 0)
	R1 <4> <- addr(_EpsilonK)   (midx: 0)
	S0 <4> <- [R1]   (midx: 0)
	S0 <4> <-  S0 - S1   (midx: 9)
	S1 <4> <-  S0 * S0   (midx: 9)
	R0 <4> <- addr(_NormFault)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <-  S0 + S1   (midx: 9)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,641 :: 		if (EpsilonK < DCVA_TetaC) {
	R0 <4> <- addr(_DCVA_TetaC)   (midx: 0)
	S1 <4> <- [R0]   (midx: 0)
	R0 <4> <- R1   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	if ( S0 >= S1) then goto 380   (midx: 9)
//DCVA_GUI_events_code.c,642 :: 		if (jj<120) accuracy += 2;
	R0 <4> <- addr(_jj)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 120) then goto 381   (midx: 2)
	R1 <4> <- addr(_accuracy)   (midx: 0)
	R0 <2> <- [R1]   (midx: 0)
	R0 <2> <-  R0 + 2   (midx: 1)
	[R1] <2> <- R0   (midx: 0)
381:   (midx: 0)
//DCVA_GUI_events_code.c,643 :: 		TFT_Write_Text("This picture is ear", 30, 160);
	R0 <4> <- #?lstr30_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 160   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,644 :: 		TFT_Write_Text("The ear is in the database", 30, 180);
	R0 <4> <- #?lstr31_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 180   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,645 :: 		TFT_Write_Text("EpsilonK", 30, 200);
	R0 <4> <- #?lstr32_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 200   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,646 :: 		FloatToStr(EpsilonK ,txt2);
	R0 <4> <- addr(_EpsilonK)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R0 <4> <- #_txt2   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _FloatToStr   (midx: 0)
//DCVA_GUI_events_code.c,647 :: 		TFT_Write_Text(txt2,100,200);
	R2 <2> <- 200   (midx: 0)
	R1 <2> <- 100   (midx: 0)
	R0 <4> <- #_txt2   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,648 :: 		ii = 0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,649 :: 		for(y1=0;y1<col;y1++){  // "WhoseEar" siyah beyaz yazdýrma
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
382:   (midx: 0)
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 383   (midx: 2)
//DCVA_GUI_events_code.c,650 :: 		for(x1=0;x1<row;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
385:   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 386   (midx: 2)
//DCVA_GUI_events_code.c,651 :: 		temp5 = TFT_RGBToColor16bit(Ear[WhoseEar*row*col+ii], Ear[WhoseEar*row*col+ii], Ear[WhoseEar*row*col+ii]);
	R0 <4> <- addr(_row)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_WhoseEar)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 * R1   (midx: 2)
	R0 <4> <- addr(_col)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 * R0   (midx: 2)
	R0 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R1 + R0   (midx: 2)
	R0 <4> <- #_Ear   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <1> <- *R0   (midx: 0)
	R2 <1> <- R0   (midx: 0)
	R1 <1> <- R0   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	R2 <1> <- R2   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	CALL _TFT_RGBToColor16bit   (midx: 0)
	S0 <4> <- (type cast)R0   (midx: 0)
	R0 <4> <- addr(_temp5)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,652 :: 		TFT_Dot(x1+130, y1+60, temp5);
	S0 <2> <- (type cast)S0   (midx: 0)
	R0 <2> <- S0   (midx: 0)
	R2 <2> <- R0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 + 60   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	FLOC_DCVA_TEST+0 <4> <- R0   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 130   (midx: 2)
	R2 <2> <- R2   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_Dot   (midx: 0)
//DCVA_GUI_events_code.c,653 :: 		ii = ii + 1;}}
	R1 <4> <- addr(_ii)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,650 :: 		for(x1=0;x1<row;x1++){
	R1 <4> <- FLOC_DCVA_TEST+0   (midx: 0)
	R0 <4> <- R1   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,653 :: 		ii = ii + 1;}}
	goto	385   (midx: 0)
386:   (midx: 0)
//DCVA_GUI_events_code.c,649 :: 		for(y1=0;y1<col;y1++){  // "WhoseEar" siyah beyaz yazdýrma
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,653 :: 		ii = ii + 1;}}
	goto	382   (midx: 0)
383:   (midx: 0)
//DCVA_GUI_events_code.c,654 :: 		}
	goto	388   (midx: 0)
380:   (midx: 0)
//DCVA_GUI_events_code.c,656 :: 		if (jj>=120) accuracy += 2;
	R0 <4> <- addr(_jj)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 < 120) then goto 389   (midx: 2)
	R1 <4> <- addr(_accuracy)   (midx: 0)
	R0 <2> <- [R1]   (midx: 0)
	R0 <2> <-  R0 + 2   (midx: 1)
	[R1] <2> <- R0   (midx: 0)
389:   (midx: 0)
//DCVA_GUI_events_code.c,657 :: 		TFT_Write_Text("This is not in the database", 30, 180);
	R0 <4> <- #?lstr33_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 180   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,658 :: 		TFT_Write_Text("EpsilonK", 30, 200);
	R0 <4> <- #?lstr34_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 200   (midx: 0)
	R1 <2> <- 30   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,659 :: 		FloatToStr(EpsilonK ,txt2);
	R0 <4> <- addr(_EpsilonK)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R0 <4> <- #_txt2   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _FloatToStr   (midx: 0)
//DCVA_GUI_events_code.c,660 :: 		TFT_Write_Text(txt2,100,200);
	R2 <2> <- 200   (midx: 0)
	R1 <2> <- 100   (midx: 0)
	R0 <4> <- #_txt2   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,661 :: 		}
388:   (midx: 0)
//DCVA_GUI_events_code.c,592 :: 		for(jj=100;jj<TestPicture+100;jj++) {      //TestPicture  = jj
	R1 <4> <- addr(_jj)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,662 :: 		}
	goto	344   (midx: 0)
345:   (midx: 0)
//DCVA_GUI_events_code.c,663 :: 		ite_total = iteration1 + iteration2 + iteration3;
	R0 <4> <- addr(_iteration2)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <4> <- addr(_iteration1)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <2> <-  R0 + R1   (midx: 1)
	R0 <4> <- addr(_iteration3)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <2> <-  R1 + R0   (midx: 1)
	R0 <4> <- addr(_ite_total)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,664 :: 		NormFault = (100*sqrt(NormFault))/(5.468008919752826e+03);
	R0 <4> <- addr(_NormFault)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _sqrt   (midx: 0)
	R0 <4> <- 1.000000E+002   (midx: 0)
	S1 <4> <- R0   (midx: 0)
	S1 <4> <-  S1 * S0   (midx: 9)
	R0 <4> <- 5.468009E+003   (midx: 0)
	S0 <4> <- R0   (midx: 0)
	S0 <4> <-  S1 / S0   (midx: 9)
	R0 <4> <- addr(_NormFault)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,665 :: 		ProgressBar1.Position = accuracy;
	R0 <4> <- addr(_accuracy)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <4> <- addr(_ProgressBar1+44)   (midx: 0)
	[R0] <2> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,666 :: 		DrawScreen(&Screen7);
	R0 <4> <- #_Screen7   (midx: 0)
	CALL _DrawScreen   (midx: 0)
//DCVA_GUI_events_code.c,668 :: 		TFT_Write_Text("iteration1 = >",10,60);
	R0 <4> <- #?lstr35_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 60   (midx: 0)
	R1 <2> <- 10   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,669 :: 		IntToStr(iteration1,txt1);
	R0 <4> <- addr(_iteration1)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <4> <- #_txt1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _IntToStr   (midx: 0)
//DCVA_GUI_events_code.c,670 :: 		TFT_Write_Text(txt1,120,60);
	R2 <2> <- 60   (midx: 0)
	R1 <2> <- 120   (midx: 0)
	R0 <4> <- #_txt1   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,672 :: 		TFT_Write_Text("iteration2 = >",10,80);
	R0 <4> <- #?lstr36_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 80   (midx: 0)
	R1 <2> <- 10   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,673 :: 		IntToStr(iteration2,txt1);
	R0 <4> <- addr(_iteration2)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <4> <- #_txt1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _IntToStr   (midx: 0)
//DCVA_GUI_events_code.c,674 :: 		TFT_Write_Text(txt1,120,80);
	R2 <2> <- 80   (midx: 0)
	R1 <2> <- 120   (midx: 0)
	R0 <4> <- #_txt1   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,676 :: 		TFT_Write_Text("iteration3 = >",10,100);
	R0 <4> <- #?lstr37_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 100   (midx: 0)
	R1 <2> <- 10   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,677 :: 		IntToStr(iteration3,txt1);
	R0 <4> <- addr(_iteration3)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <4> <- #_txt1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _IntToStr   (midx: 0)
//DCVA_GUI_events_code.c,678 :: 		TFT_Write_Text(txt1,120,100);
	R2 <2> <- 100   (midx: 0)
	R1 <2> <- 120   (midx: 0)
	R0 <4> <- #_txt1   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,680 :: 		TFT_Write_Text("total = >",10,120);
	R0 <4> <- #?lstr38_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 120   (midx: 0)
	R1 <2> <- 10   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,681 :: 		IntToStr(ite_total,txt1);
	R0 <4> <- addr(_ite_total)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R1 <4> <- #_txt1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _IntToStr   (midx: 0)
//DCVA_GUI_events_code.c,682 :: 		TFT_Write_Text(txt1,120,120);
	R2 <2> <- 120   (midx: 0)
	R1 <2> <- 120   (midx: 0)
	R0 <4> <- #_txt1   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,684 :: 		TFT_Write_Text("Norm Fault = >",10,140);
	R0 <4> <- #?lstr39_DCVA_GUI_events_code   (midx: 0)
	R2 <2> <- 140   (midx: 0)
	R1 <2> <- 10   (midx: 0)
	R0 <4> <- R0   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,685 :: 		FloatToStr(NormFault,txt2);
	R0 <4> <- addr(_NormFault)   (midx: 0)
	S0 <4> <- [R0]   (midx: 0)
	R0 <4> <- #_txt2   (midx: 0)
	S0 <4> <- S0   (midx: 0)
	CALL _FloatToStr   (midx: 0)
//DCVA_GUI_events_code.c,686 :: 		TFT_Write_Text(txt2,120,140);
	R2 <2> <- 140   (midx: 0)
	R1 <2> <- 120   (midx: 0)
	R0 <4> <- #_txt2   (midx: 0)
	CALL _TFT_Write_Text   (midx: 0)
//DCVA_GUI_events_code.c,688 :: 		while(1);
390:   (midx: 0)
	goto	390   (midx: 0)
  end
   (midx: 0)
_Show_database:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,691 :: 		void Show_database() {
_Show_database:
  begin   (midx: 0)
//DCVA_GUI_events_code.c,692 :: 		DrawScreen(&Screen8);
	R0 <4> <- #_Screen8   (midx: 0)
	CALL _DrawScreen   (midx: 0)
//DCVA_GUI_events_code.c,693 :: 		ValueZero();
	CALL _ValueZero   (midx: 0)
//DCVA_GUI_events_code.c,694 :: 		ii = 0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_ii)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
//DCVA_GUI_events_code.c,695 :: 		for(jj=0;jj<20;jj++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_jj)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
392:   (midx: 0)
	R0 <4> <- addr(_jj)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 20) then goto 393   (midx: 2)
//DCVA_GUI_events_code.c,697 :: 		for(z1=0;z1<5;z1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
395:   (midx: 0)
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 5) then goto 396   (midx: 2)
//DCVA_GUI_events_code.c,698 :: 		Delay_ms(100);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//DCVA_GUI_events_code.c,699 :: 		for(x1=0;x1<256;x1++) histogram[x1]=0;
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
399:   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 256) then goto 400   (midx: 2)
	R2 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R2]   (midx: 0)
	R1 <4> <-  R0 shl 1   (midx: 2)
	R0 <4> <- #_histogram   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <2> <- 0   (midx: 0)
	[R1] <2> <- R0   (midx: 0)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R2] <4> <- R0   (midx: 0)
	goto	399   (midx: 0)
400:   (midx: 0)
//DCVA_GUI_events_code.c,701 :: 		for(y1=0;y1<col;y1++){  // "Training set"
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
402:   (midx: 0)
	R0 <4> <- addr(_col)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 403   (midx: 2)
//DCVA_GUI_events_code.c,702 :: 		for(x1=0;x1<row;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
405:   (midx: 0)
	R0 <4> <- addr(_row)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= R1) then goto 406   (midx: 2)
//DCVA_GUI_events_code.c,703 :: 		tempk1=Ear[ii];
	R0 <4> <- addr(_ii)   (midx: 0)
	FLOC_Show_database+4 <4> <- R0   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- #_Ear   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R3 <1> <- *R0   (midx: 0)
	R0 <4> <- addr(_tempk1)   (midx: 0)
	[R0] <1> <- R3   (midx: 0)
//DCVA_GUI_events_code.c,704 :: 		temp1 = TFT_RGBToColor16bit(tempk1, tempk1, tempk1);
	R2 <1> <- R3   (midx: 0)
	R1 <1> <- R3   (midx: 0)
	R0 <1> <- R3   (midx: 0)
	R2 <1> <- R2   (midx: 0)
	R1 <1> <- R1   (midx: 0)
	R0 <1> <- R0   (midx: 0)
	CALL _TFT_RGBToColor16bit   (midx: 0)
	S0 <4> <- (type cast)R0   (midx: 0)
	R0 <4> <- addr(_temp1)   (midx: 0)
	[R0] <4> <- S0   (midx: 0)
//DCVA_GUI_events_code.c,705 :: 		TFT_Dot(x1+10+z1*60, y1+25, temp1);
	S0 <2> <- (type cast)S0   (midx: 0)
	R0 <2> <- S0   (midx: 0)
	R4 <2> <- R0   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R3 <4> <-  R0 + 25   (midx: 2)
	R0 <4> <- addr(_x1)   (midx: 0)
	FLOC_Show_database+0 <4> <- R0   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R2 <4> <-  R0 + 10   (midx: 2)
	R0 <4> <- addr(_z1)   (midx: 0)
	R1 <4> <- [R0]   (midx: 0)
	R0 <4> <- 60   (midx: 0)
	R0 <4> <-  R1 * R0   (midx: 2)
	R0 <4> <-  R2 + R0   (midx: 2)
	R2 <2> <- R4   (midx: 0)
	R1 <2> <- R3   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_Dot   (midx: 0)
//DCVA_GUI_events_code.c,706 :: 		histogram[tempk1] = histogram[tempk1] + 1;
	R0 <4> <- addr(_tempk1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  R0 shl 1   (midx: 2)
	R0 <4> <- #_histogram   (midx: 0)
	R1 <4> <-  R0 + R1   (midx: 2)
	R0 <2> <- *R1   (midx: 0)
	R0 <2> <-  R0 + 1   (midx: 1)
	[R1] <2> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,707 :: 		ii = ii + 1;}}
	R1 <4> <- FLOC_Show_database+4   (midx: 0)
	R0 <4> <- R1   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,702 :: 		for(x1=0;x1<row;x1++){
	R1 <4> <- FLOC_Show_database+0   (midx: 0)
	R0 <4> <- R1   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,707 :: 		ii = ii + 1;}}
	goto	405   (midx: 0)
406:   (midx: 0)
//DCVA_GUI_events_code.c,701 :: 		for(y1=0;y1<col;y1++){  // "Training set"
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,707 :: 		ii = ii + 1;}}
	goto	402   (midx: 0)
403:   (midx: 0)
//DCVA_GUI_events_code.c,709 :: 		for(y1=105;y1<240;y1++){
	R1 <4> <- 105   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
408:   (midx: 0)
	R0 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 240) then goto 409   (midx: 2)
//DCVA_GUI_events_code.c,710 :: 		for(x1=0;x1<320;x1++)
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
411:   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 320) then goto 412   (midx: 2)
//DCVA_GUI_events_code.c,711 :: 		TFT_Dot(x1, y1, CL_WHITE);}
	R0 <4> <- addr(_y1)   (midx: 0)
	R1 <2> <- [R0]   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <2> <- [R0]   (midx: 0)
	R2 <2> <- 65535   (midx: 0)
	R1 <2> <- R1   (midx: 0)
	R0 <2> <- R0   (midx: 0)
	CALL _TFT_Dot   (midx: 0)
//DCVA_GUI_events_code.c,710 :: 		for(x1=0;x1<320;x1++)
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,711 :: 		TFT_Dot(x1, y1, CL_WHITE);}
	goto	411   (midx: 0)
412:   (midx: 0)
//DCVA_GUI_events_code.c,709 :: 		for(y1=105;y1<240;y1++){
	R1 <4> <- addr(_y1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,711 :: 		TFT_Dot(x1, y1, CL_WHITE);}
	goto	408   (midx: 0)
409:   (midx: 0)
//DCVA_GUI_events_code.c,713 :: 		if (z1==0)DrawLabel(&Diagram8_S2L4);
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 != 0) then goto 414   (midx: 2)
	R0 <4> <- #_Diagram8_S2L4   (midx: 0)
	CALL _DrawLabel   (midx: 0)
414:   (midx: 0)
//DCVA_GUI_events_code.c,714 :: 		if (z1==1)DrawLabel(&Diagram8_S2L5);
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 != 1) then goto 415   (midx: 2)
	R0 <4> <- #_Diagram8_S2L5   (midx: 0)
	CALL _DrawLabel   (midx: 0)
415:   (midx: 0)
//DCVA_GUI_events_code.c,715 :: 		if (z1==2)DrawLabel(&Diagram8_S2L6);
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 != 2) then goto 416   (midx: 2)
	R0 <4> <- #_Diagram8_S2L6   (midx: 0)
	CALL _DrawLabel   (midx: 0)
416:   (midx: 0)
//DCVA_GUI_events_code.c,716 :: 		if (z1==3)DrawLabel(&Diagram8_S2L7);
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 != 3) then goto 417   (midx: 2)
	R0 <4> <- #_Diagram8_S2L7   (midx: 0)
	CALL _DrawLabel   (midx: 0)
417:   (midx: 0)
//DCVA_GUI_events_code.c,717 :: 		if (z1==4)DrawLabel(&Diagram8_S2L8);
	R0 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 != 4) then goto 418   (midx: 2)
	R0 <4> <- #_Diagram8_S2L8   (midx: 0)
	CALL _DrawLabel   (midx: 0)
418:   (midx: 0)
//DCVA_GUI_events_code.c,719 :: 		TFT_Line(32,235,32+256,235);
	R3 <2> <- 235   (midx: 0)
	R2 <2> <- 288   (midx: 0)
	R1 <2> <- 235   (midx: 0)
	R0 <2> <- 32   (midx: 0)
	CALL _TFT_Line   (midx: 0)
//DCVA_GUI_events_code.c,721 :: 		for(x1=0;x1<256;x1++){
	R1 <4> <- 0   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	[R0] <4> <- R1   (midx: 0)
419:   (midx: 0)
	R0 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	if ( R0 >= 256) then goto 420   (midx: 2)
//DCVA_GUI_events_code.c,722 :: 		kk = histogram[x1];
	R3 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R3]   (midx: 0)
	R1 <4> <-  R0 shl 1   (midx: 2)
	R0 <4> <- #_histogram   (midx: 0)
	R0 <4> <-  R0 + R1   (midx: 2)
	R0 <2> <- *R0   (midx: 0)
	R2 <4> <- addr(_kk)   (midx: 0)
	[R2] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,723 :: 		TFT_V_Line(235,235-kk,32+x1);}
	R0 <4> <- R3   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R1 <4> <-  32 + R0   (midx: 2)
	R0 <4> <- R2   (midx: 0)
	R0 <4> <- [R0]   (midx: 0)
	R0 <4> <-  235 - R0   (midx: 2)
	R2 <2> <- R1   (midx: 0)
	R1 <2> <- R0   (midx: 0)
	R0 <2> <- 235   (midx: 0)
	CALL _TFT_V_Line   (midx: 0)
//DCVA_GUI_events_code.c,721 :: 		for(x1=0;x1<256;x1++){
	R1 <4> <- addr(_x1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,723 :: 		TFT_V_Line(235,235-kk,32+x1);}
	goto	419   (midx: 0)
420:   (midx: 0)
//DCVA_GUI_events_code.c,697 :: 		for(z1=0;z1<5;z1++){
	R1 <4> <- addr(_z1)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,725 :: 		}}
	goto	395   (midx: 0)
396:   (midx: 0)
//DCVA_GUI_events_code.c,695 :: 		for(jj=0;jj<20;jj++){
	R1 <4> <- addr(_jj)   (midx: 0)
	R0 <4> <- [R1]   (midx: 0)
	R0 <4> <-  R0 + 1   (midx: 2)
	[R1] <4> <- R0   (midx: 0)
//DCVA_GUI_events_code.c,725 :: 		}}
	goto	392   (midx: 0)
393:   (midx: 0)
//DCVA_GUI_events_code.c,727 :: 		Delay_ms(500);
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 2)
	asm: -1   (midx: 1)
	asm: -1   (midx: 5)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
	asm: -1   (midx: 1)
//DCVA_GUI_events_code.c,728 :: 		DrawScreen(&Screen1);
	R0 <4> <- #_Screen1   (midx: 0)
	CALL _DrawScreen   (midx: 0)
  end
   (midx: 0)
